{"uid":"872a8e09036f907b","name":"test_TC242_get_tax_categories_valida_code_y_name_no_vacios","fullName":"tests.configuration.tax_categories.test_HU08_KG_GET_TaxCatergoryList#test_TC242_get_tax_categories_valida_code_y_name_no_vacios","historyId":"1bcbd52398b1c8212a9a286391587e11","time":{"start":1755552784024,"stop":1755552784175,"duration":151},"status":"skipped","statusMessage":"XFAIL known incumple con la validacion esperada del sistema BUG\n\nAssertionError: Las siguientes categorías tienen code o name vacío: [9749, 9750, 9751, 9752]\nassert not [9749, 9750, 9751, 9752]","statusTrace":"setup_teardown_view_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU1NTI3MDUsImV4cCI6MTc1NTU1NjMwNSwicm9sZX...xts/TaxCategory', '@id': '/api/v2/admin/tax-categories/TAX-20ab48', '@type': 'TaxCategory', 'code': 'TAX-20ab48', ...})\n\n    @pytest.mark.high\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known incumple con la validacion esperada del sistema BUG\", run=True)\n    def test_TC242_get_tax_categories_valida_code_y_name_no_vacios(setup_teardown_view_tax_category):\n        auth_headers, tax_category1, tax_category2 = setup_teardown_view_tax_category\n        endpoint = EndpointTaxCategory.tax_category()\n        response = SyliusRequest.get(endpoint, auth_headers)\n        log_request_response(endpoint, response, auth_headers)\n        AssertionStatusCode.assert_status_code_200(response)\n    \n        categorias = response.json().get(\"hydra:member\", [])\n        ids_con_errores = []\n        for categoria in categorias:\n            if categoria.get(\"code\", \"\").strip() == \"\" or categoria.get(\"name\", \"\").strip() == \"\":\n                ids_con_errores.append(categoria.get(\"id\", categoria))\n>       assert not ids_con_errores, f\"Las siguientes categorías tienen code o name vacío: {ids_con_errores}\"\nE       AssertionError: Las siguientes categorías tienen code o name vacío: [9749, 9750, 9751, 9752]\nE       assert not [9749, 9750, 9751, 9752]\n\ntests/configuration/tax_categories/test_HU08_KG_GET_TaxCatergoryList.py:119: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755552704632,"stop":1755552704633,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755552704633,"stop":1755552705149,"duration":516},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_teardown_view_tax_category","time":{"start":1755552782010,"stop":1755552782511,"duration":501},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL known incumple con la validacion esperada del sistema BUG\n\nAssertionError: Las siguientes categorías tienen code o name vacío: [9749, 9750, 9751, 9752]\nassert not [9749, 9750, 9751, 9752]","statusTrace":"setup_teardown_view_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU1NTI3MDUsImV4cCI6MTc1NTU1NjMwNSwicm9sZX...xts/TaxCategory', '@id': '/api/v2/admin/tax-categories/TAX-20ab48', '@type': 'TaxCategory', 'code': 'TAX-20ab48', ...})\n\n    @pytest.mark.high\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known incumple con la validacion esperada del sistema BUG\", run=True)\n    def test_TC242_get_tax_categories_valida_code_y_name_no_vacios(setup_teardown_view_tax_category):\n        auth_headers, tax_category1, tax_category2 = setup_teardown_view_tax_category\n        endpoint = EndpointTaxCategory.tax_category()\n        response = SyliusRequest.get(endpoint, auth_headers)\n        log_request_response(endpoint, response, auth_headers)\n        AssertionStatusCode.assert_status_code_200(response)\n    \n        categorias = response.json().get(\"hydra:member\", [])\n        ids_con_errores = []\n        for categoria in categorias:\n            if categoria.get(\"code\", \"\").strip() == \"\" or categoria.get(\"name\", \"\").strip() == \"\":\n                ids_con_errores.append(categoria.get(\"id\", categoria))\n>       assert not ids_con_errores, f\"Las siguientes categorías tienen code o name vacío: {ids_con_errores}\"\nE       AssertionError: Las siguientes categorías tienen code o name vacío: [9749, 9750, 9751, 9752]\nE       assert not [9749, 9750, 9751, 9752]\n\ntests/configuration/tax_categories/test_HU08_KG_GET_TaxCatergoryList.py:119: AssertionError","steps":[],"attachments":[{"uid":"eac52b929407908c","name":"log","source":"eac52b929407908c.txt","type":"text/plain","size":6036}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup_teardown_view_tax_category::0","time":{"start":1755552784934,"stop":1755552785243,"duration":309},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"negative"},{"name":"tag","value":"functional"},{"name":"tag","value":"high"},{"name":"parentSuite","value":"tests.configuration.tax_categories"},{"name":"suite","value":"test_HU08_KG_GET_TaxCatergoryList"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2406-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.configuration.tax_categories.test_HU08_KG_GET_TaxCatergoryList"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":3,"passed":1,"unknown":0,"total":4},"items":[{"uid":"df123a73c4f2478c","reportUrl":"https://Elv500.github.io/Softsign/92//#testresult/df123a73c4f2478c","status":"passed","statusDetails":"XPASS known incumple con la validacion esperada del sistema BUG","time":{"start":1755552493664,"stop":1755552494153,"duration":489}},{"uid":"e83b5ed3a0c61c14","reportUrl":"https://Elv500.github.io/Softsign/68//#testresult/e83b5ed3a0c61c14","status":"skipped","statusDetails":"XFAIL known incumple con la validacion esperada del sistema BUG\n\nAssertionError: Las siguientes categorías tienen code o name vacío: [9607, 9608, 9609, 9610, 9648, 9649, 9650, 9651]\nassert not [9607, 9608, 9609, 9610, 9648, 9649, ...]","time":{"start":1755546194172,"stop":1755546195490,"duration":1318}},{"uid":"2ff66727931634f7","reportUrl":"https://Elv500.github.io/Softsign/57//#testresult/2ff66727931634f7","status":"skipped","statusDetails":"XFAIL known incumple con la validacion esperada del sistema BUG\n\nAssertionError: Las siguientes categorías tienen code o name vacío: [9607, 9608, 9609, 9610]\nassert not [9607, 9608, 9609, 9610]","time":{"start":1755544279735,"stop":1755544280540,"duration":805}}]},"tags":["negative","functional","high"]},"source":"872a8e09036f907b.json","parameterValues":[]}