{"uid":"59036229da347207","name":"test_TC192_verificar_parametros_itemsPerPage_malformados","fullName":"tests.customer.groups.test_HU01_PD_GET_Customer_Group#test_TC192_verificar_parametros_itemsPerPage_malformados","historyId":"558db777cedeb96f491027ef1d6df4f4","time":{"start":1755467461870,"stop":1755467462029,"duration":159},"status":"skipped","statusMessage":"XFAIL Known issue BugId: CG-02 No controla los par치metros itemsPerPage malformados\n\nAssertionError","statusTrace":"auth_headers = {'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU0NjczNzAsImV4cCI6MTc1NTQ3MDk3MCwicm9sZXM...TzLcqhoV6i5jANuNmgvkWkcENYm6BfEqO_DBZZoQ7onruQ3z4X1x8eJp35FmlOffvMcgZywWXhKy0Foc10MT-l7iMeyKNSOFiM9xlQJClw0Q7U4Bf6uGI'}\n\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"Known issue BugId: CG-02 No controla los par치metros itemsPerPage malformados\", run=True)\n    @pytest.mark.medium\n    def test_TC192_verificar_parametros_itemsPerPage_malformados(auth_headers):\n        malformed_param = \"xyz\"\n    \n        endpoint = EndpointCustomerGroup.customer_group() + f\"?page=1&itemsPerPage={malformed_param}\"\n        response = SyliusRequest.get(endpoint, auth_headers)\n    \n        log_request_response(endpoint, response, headers=auth_headers)\n    \n>       AssertionStatusCode.assert_status_code_400(response)\n\ntests/customer/groups/test_HU01_PD_GET_Customer_Group.py:292: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n>       assert response.status_code == 400\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:23: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755467370080,"stop":1755467370081,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755467370081,"stop":1755467370590,"duration":509},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL Known issue BugId: CG-02 No controla los par치metros itemsPerPage malformados\n\nAssertionError","statusTrace":"auth_headers = {'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU0NjczNzAsImV4cCI6MTc1NTQ3MDk3MCwicm9sZXM...TzLcqhoV6i5jANuNmgvkWkcENYm6BfEqO_DBZZoQ7onruQ3z4X1x8eJp35FmlOffvMcgZywWXhKy0Foc10MT-l7iMeyKNSOFiM9xlQJClw0Q7U4Bf6uGI'}\n\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"Known issue BugId: CG-02 No controla los par치metros itemsPerPage malformados\", run=True)\n    @pytest.mark.medium\n    def test_TC192_verificar_parametros_itemsPerPage_malformados(auth_headers):\n        malformed_param = \"xyz\"\n    \n        endpoint = EndpointCustomerGroup.customer_group() + f\"?page=1&itemsPerPage={malformed_param}\"\n        response = SyliusRequest.get(endpoint, auth_headers)\n    \n        log_request_response(endpoint, response, headers=auth_headers)\n    \n>       AssertionStatusCode.assert_status_code_400(response)\n\ntests/customer/groups/test_HU01_PD_GET_Customer_Group.py:292: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n>       assert response.status_code == 400\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:23: AssertionError","steps":[],"attachments":[{"uid":"53cc61bb92dd9008","name":"log","source":"53cc61bb92dd9008.txt","type":"text/plain","size":2765}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"medium"},{"name":"tag","value":"negative"},{"name":"parentSuite","value":"tests.customer.groups"},{"name":"suite","value":"test_HU01_PD_GET_Customer_Group"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2375-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.groups.test_HU01_PD_GET_Customer_Group"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["negative","medium"]},"source":"59036229da347207.json","parameterValues":[]}