{"uid":"b50d22edd0c854b7","name":"test_TC90_Validar_itemsPerPage_alfabetico_error","fullName":"tests.catalog.association_types.test_HU07_EN_GET_ProductAssociationTypesList#test_TC90_Validar_itemsPerPage_alfabetico_error","historyId":"029e7632eea422bc909fe3d8b5f9e0a5","time":{"start":1755549630391,"stop":1755549630709,"duration":318},"status":"skipped","statusMessage":"XFAIL BUG90: Permite ingresar un valor alfabetico, pero solo deberia permitir integer\n\nAssertionError","statusTrace":"auth_headers = {'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU1NDk2MjcsImV4cCI6MTc1NTU1MzIyNywicm9sZXM...PwyYY9jRHmZEYTlCRu8tQqEKcA8mmflJ5G2xLDDYkXll3OGFQDpGvkZzEnYu91V5ljJZ2b6W9l-GY0yn4IwCSp9wkLNkrqO1bD_z4YwFNs9lEbZqBkUio'}\n\n    @pytest.mark.negative\n    @pytest.mark.regression\n    @pytest.mark.xfail(reason=\"BUG90: Permite ingresar un valor alfabetico, pero solo deberia permitir integer\", run=True)\n    def test_TC90_Validar_itemsPerPage_alfabetico_error(auth_headers):\n        url = EndpointAssociationTypes.list(items_per_page=\"a\")\n    \n        response = SyliusRequest.get(url, auth_headers)\n        response_data = response.json()\n        log_request_response(url, response, auth_headers)\n    \n>       AssertionStatusCode.assert_status_code_400(response)\n\ntests/catalog/association_types/test_HU07_EN_GET_ProductAssociationTypesList.py:168: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n>       assert response.status_code == 400\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:23: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755549627161,"stop":1755549627162,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755549627162,"stop":1755549627679,"duration":517},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL BUG90: Permite ingresar un valor alfabetico, pero solo deberia permitir integer\n\nAssertionError","statusTrace":"auth_headers = {'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU1NDk2MjcsImV4cCI6MTc1NTU1MzIyNywicm9sZXM...PwyYY9jRHmZEYTlCRu8tQqEKcA8mmflJ5G2xLDDYkXll3OGFQDpGvkZzEnYu91V5ljJZ2b6W9l-GY0yn4IwCSp9wkLNkrqO1bD_z4YwFNs9lEbZqBkUio'}\n\n    @pytest.mark.negative\n    @pytest.mark.regression\n    @pytest.mark.xfail(reason=\"BUG90: Permite ingresar un valor alfabetico, pero solo deberia permitir integer\", run=True)\n    def test_TC90_Validar_itemsPerPage_alfabetico_error(auth_headers):\n        url = EndpointAssociationTypes.list(items_per_page=\"a\")\n    \n        response = SyliusRequest.get(url, auth_headers)\n        response_data = response.json()\n        log_request_response(url, response, auth_headers)\n    \n>       AssertionStatusCode.assert_status_code_400(response)\n\ntests/catalog/association_types/test_HU07_EN_GET_ProductAssociationTypesList.py:168: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n>       assert response.status_code == 400\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:23: AssertionError","steps":[],"attachments":[{"uid":"45d32dfc331c41c5","name":"log","source":"45d32dfc331c41c5.txt","type":"text/plain","size":2712}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"negative"},{"name":"parentSuite","value":"tests.catalog.association_types"},{"name":"suite","value":"test_HU07_EN_GET_ProductAssociationTypesList"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2383-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.association_types.test_HU07_EN_GET_ProductAssociationTypesList"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":2,"passed":0,"unknown":0,"total":2},"items":[{"uid":"a5e8d4d2dd2f1dae","reportUrl":"https://Elv500.github.io/Softsign/57//#testresult/a5e8d4d2dd2f1dae","status":"skipped","statusDetails":"XFAIL BUG90: Permite ingresar un valor alfabetico, pero solo deberia permitir integer\n\nAssertionError","time":{"start":1755543964767,"stop":1755543966121,"duration":1354}}]},"tags":["negative","regression"]},"source":"b50d22edd0c854b7.json","parameterValues":[]}