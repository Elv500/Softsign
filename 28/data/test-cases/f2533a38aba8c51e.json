{"uid":"f2533a38aba8c51e","name":"test_TC407_Verificar_no_permitir_eliminar_atributo_con_token_invalido","fullName":"tests.catalog.attributes.test_HU23_LQ_DELETE_Attributes#test_TC407_Verificar_no_permitir_eliminar_atributo_con_token_invalido","historyId":"7a4beadfff60ad86243b0993cdc2046f","time":{"start":1755291265607,"stop":1755291266028,"duration":421},"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.security\n    @pytest.mark.smoke\n    #Admin> Catalog> Attributes TC_407: No debe eliminarse un atributo cuando se genera un token invalido.\n    def test_TC407_Verificar_no_permitir_eliminar_atributo_con_token_invalido():\n        code_existe = \"t_shirt_brand\"\n        invalid_headers = {\"Authorization\": \"Bearer token_invalido\"}\n        url = EndpointAttributes.code(code_existe)\n        response = SyliusRequest.delete(url, invalid_headers)\n    \n        log_request_response(url, response, headers=invalid_headers)\n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/catalog/attributes/test_HU23_LQ_DELETE_Attributes.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291258725,"stop":1755291258725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.security\n    @pytest.mark.smoke\n    #Admin> Catalog> Attributes TC_407: No debe eliminarse un atributo cuando se genera un token invalido.\n    def test_TC407_Verificar_no_permitir_eliminar_atributo_con_token_invalido():\n        code_existe = \"t_shirt_brand\"\n        invalid_headers = {\"Authorization\": \"Bearer token_invalido\"}\n        url = EndpointAttributes.code(code_existe)\n        response = SyliusRequest.delete(url, invalid_headers)\n    \n        log_request_response(url, response, headers=invalid_headers)\n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/catalog/attributes/test_HU23_LQ_DELETE_Attributes.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","steps":[],"attachments":[{"uid":"20eb06a2312d00e5","name":"log","source":"20eb06a2312d00e5.txt","type":"text/plain","size":26571}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests.catalog.attributes"},{"name":"suite","value":"test_HU23_LQ_DELETE_Attributes"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2507-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.attributes.test_HU23_LQ_DELETE_Attributes"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["security","smoke"]},"source":"f2533a38aba8c51e.json","parameterValues":[]}