{"uid":"2e1bab3cf9be7067","name":"test_TC48_Verificar_que_no_se_permita_actualizar_atributo_sin_token","fullName":"tests.catalog.attributes.test_HU12_LQ_PUT_Attributes#test_TC48_Verificar_que_no_se_permita_actualizar_atributo_sin_token","historyId":"0de5632184b7bdeb3ad2e1166d1dd41a","time":{"start":1755291263153,"stop":1755291263583,"duration":430},"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.security\n    @pytest.mark.smoke\n    def test_TC48_Verificar_que_no_se_permita_actualizar_atributo_sin_token():\n        update_data = generate_attributes_source_data()\n        url = EndpointAttributes.code(\"codigo_inexistente_123\")\n        put_response = SyliusRequest.put(url, {}, update_data)\n        log_request_response(url, put_response, headers={}, payload=update_data)\n>       AssertionStatusCode.assert_status_code_401(put_response)\n\ntests/catalog/attributes/test_HU12_LQ_PUT_Attributes.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291258725,"stop":1755291258725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.security\n    @pytest.mark.smoke\n    def test_TC48_Verificar_que_no_se_permita_actualizar_atributo_sin_token():\n        update_data = generate_attributes_source_data()\n        url = EndpointAttributes.code(\"codigo_inexistente_123\")\n        put_response = SyliusRequest.put(url, {}, update_data)\n        log_request_response(url, put_response, headers={}, payload=update_data)\n>       AssertionStatusCode.assert_status_code_401(put_response)\n\ntests/catalog/attributes/test_HU12_LQ_PUT_Attributes.py:33: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","steps":[],"attachments":[{"uid":"1e2191d48f4b3602","name":"log","source":"1e2191d48f4b3602.txt","type":"text/plain","size":26812}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests.catalog.attributes"},{"name":"suite","value":"test_HU12_LQ_PUT_Attributes"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2507-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.attributes.test_HU12_LQ_PUT_Attributes"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"fe1ffbd745e0e4f0","reportUrl":"https://Elv500.github.io/Softsign/27//#testresult/fe1ffbd745e0e4f0","status":"passed","time":{"start":1755149080484,"stop":1755149080676,"duration":192}},{"uid":"cb9dce26809b2fd3","reportUrl":"https://Elv500.github.io/Softsign/26//#testresult/cb9dce26809b2fd3","status":"passed","time":{"start":1755146202303,"stop":1755146202492,"duration":189}}]},"tags":["security","smoke"]},"source":"2e1bab3cf9be7067.json","parameterValues":[]}