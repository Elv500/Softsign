{"uid":"49b6865bee7e40b5","name":"test_TC58_Auth_fallido_con_password_invalida","fullName":"tests.login.test_HU00_EA_POST_LoginAdmin#test_TC58_Auth_fallido_con_password_invalida","historyId":"e296d64bd18f4958e506356b3751fb48","time":{"start":1755291280853,"stop":1755291281059,"duration":206},"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.negative\n    @pytest.mark.regression\n    @pytest.mark.functional\n    def test_TC58_Auth_fallido_con_password_invalida():\n        url = Endpoint.login()\n        payload = Auth().get_invalid_password_payload()\n        response = SyliusRequest.post(url, payload=payload)\n        AssertionLogin.assert_login_input_schema(payload)\n        assert payload[\"email\"] is not None\n        assert payload[\"password\"] is not None\n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/login/test_HU00_EA_POST_LoginAdmin.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291258725,"stop":1755291258725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.negative\n    @pytest.mark.regression\n    @pytest.mark.functional\n    def test_TC58_Auth_fallido_con_password_invalida():\n        url = Endpoint.login()\n        payload = Auth().get_invalid_password_payload()\n        response = SyliusRequest.post(url, payload=payload)\n        AssertionLogin.assert_login_input_schema(payload)\n        assert payload[\"email\"] is not None\n        assert payload[\"password\"] is not None\n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/login/test_HU00_EA_POST_LoginAdmin.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","steps":[],"attachments":[{"uid":"a2645d2b268dc3de","name":"log","source":"a2645d2b268dc3de.txt","type":"text/plain","size":209}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"functional"},{"name":"tag","value":"regression"},{"name":"tag","value":"negative"},{"name":"parentSuite","value":"tests.login"},{"name":"suite","value":"test_HU00_EA_POST_LoginAdmin"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2507-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.login.test_HU00_EA_POST_LoginAdmin"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"b4e7efa8f0836814","reportUrl":"https://Elv500.github.io/Softsign/27//#testresult/b4e7efa8f0836814","status":"passed","time":{"start":1755149208791,"stop":1755149209137,"duration":346}}]},"tags":["functional","negative","regression"]},"source":"49b6865bee7e40b5.json","parameterValues":[]}