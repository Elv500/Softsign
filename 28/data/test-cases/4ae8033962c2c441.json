{"uid":"4ae8033962c2c441","name":"test_TC132_enviar_solicitud_sin_token_autenticacion","fullName":"tests.catalog.association_types.test_HU17_EN_POST_ProductAssociationTypes#test_TC132_enviar_solicitud_sin_token_autenticacion","historyId":"734b14ac029d0bcb9c025208a0df63a5","time":{"start":1755291260590,"stop":1755291261033,"duration":443},"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.regression\n    @pytest.mark.security\n    @pytest.mark.negative\n    def test_TC132_enviar_solicitud_sin_token_autenticacion():\n        headers = {}\n        payload = generate_association_types_source_data()\n        url = EndpointAssociationTypes.association_types()\n    \n        response = SyliusRequest.post(url, headers, payload)\n        log_request_response(url, response, headers, payload)\n    \n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/catalog/association_types/test_HU17_EN_POST_ProductAssociationTypes.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291258725,"stop":1755291258725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.regression\n    @pytest.mark.security\n    @pytest.mark.negative\n    def test_TC132_enviar_solicitud_sin_token_autenticacion():\n        headers = {}\n        payload = generate_association_types_source_data()\n        url = EndpointAssociationTypes.association_types()\n    \n        response = SyliusRequest.post(url, headers, payload)\n        log_request_response(url, response, headers, payload)\n    \n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/catalog/association_types/test_HU17_EN_POST_ProductAssociationTypes.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","steps":[],"attachments":[{"uid":"eee264f147716943","name":"log","source":"eee264f147716943.txt","type":"text/plain","size":26649}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"negative"},{"name":"tag","value":"security"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.catalog.association_types"},{"name":"suite","value":"test_HU17_EN_POST_ProductAssociationTypes"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2507-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.association_types.test_HU17_EN_POST_ProductAssociationTypes"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"fa9c80d8fd4eb913","reportUrl":"https://Elv500.github.io/Softsign/27//#testresult/fa9c80d8fd4eb913","status":"passed","time":{"start":1755149076532,"stop":1755149076761,"duration":229}}]},"tags":["negative","security","regression"]},"source":"4ae8033962c2c441.json","parameterValues":[]}