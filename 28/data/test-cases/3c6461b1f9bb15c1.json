{"uid":"3c6461b1f9bb15c1","name":"test_TC79_requerimiento_autenticacion_eliminar_TaxCategory","fullName":"tests.configuration.tax_categories.test_HU22_KG_DELETE_TaxCategory#test_TC79_requerimiento_autenticacion_eliminar_TaxCategory","historyId":"17082dbde559bf4f4c957af2f0ef0d2f","time":{"start":1755291274183,"stop":1755291274390,"duration":207},"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.functional\n    @pytest.mark.regression\n    def test_TC79_requerimiento_autenticacion_eliminar_TaxCategory():\n        fake_code = \"TAX-AUTH-REQ-12345\"\n        invalid_headers = {\"AUTHORIZATION\": \"Bearer TOKEN_invalido\"}\n        endpoint = EndpointTaxCategory.code(fake_code)\n    \n        response = SyliusRequest.delete(endpoint, invalid_headers)\n        log_request_response(endpoint, response, headers=invalid_headers)\n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/configuration/tax_categories/test_HU22_KG_DELETE_TaxCategory.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291258725,"stop":1755291258725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.functional\n    @pytest.mark.regression\n    def test_TC79_requerimiento_autenticacion_eliminar_TaxCategory():\n        fake_code = \"TAX-AUTH-REQ-12345\"\n        invalid_headers = {\"AUTHORIZATION\": \"Bearer TOKEN_invalido\"}\n        endpoint = EndpointTaxCategory.code(fake_code)\n    \n        response = SyliusRequest.delete(endpoint, invalid_headers)\n        log_request_response(endpoint, response, headers=invalid_headers)\n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/configuration/tax_categories/test_HU22_KG_DELETE_TaxCategory.py:84: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","steps":[],"attachments":[{"uid":"597a168e1f6f62cf","name":"log","source":"597a168e1f6f62cf.txt","type":"text/plain","size":26573}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.configuration.tax_categories"},{"name":"suite","value":"test_HU22_KG_DELETE_TaxCategory"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2507-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.configuration.tax_categories.test_HU22_KG_DELETE_TaxCategory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"84f0d5cd702aa8eb","reportUrl":"https://Elv500.github.io/Softsign/27//#testresult/84f0d5cd702aa8eb","status":"passed","time":{"start":1755149147554,"stop":1755149147736,"duration":182}}]},"tags":["functional","regression"]},"source":"3c6461b1f9bb15c1.json","parameterValues":[]}