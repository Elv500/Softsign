{"uid":"a5d4d6515328cd5a","name":"test_TC40_Verificar_que_no_se_permita_obtener_la_lista_de_atributos_sin_token","fullName":"tests.catalog.attributes.test_HU09_LQ_GET_AttributesList#test_TC40_Verificar_que_no_se_permita_obtener_la_lista_de_atributos_sin_token","historyId":"5f68a36be5a76b1b41dfe06eddb5686d","time":{"start":1755291262165,"stop":1755291262596,"duration":431},"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.functional\n    @pytest.mark.security\n    @pytest.mark.smoke\n    def test_TC40_Verificar_que_no_se_permita_obtener_la_lista_de_atributos_sin_token():\n        url = EndpointAttributes.attributes()\n        response= SyliusRequest.get(url,{})\n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/catalog/attributes/test_HU09_LQ_GET_AttributesList.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291258725,"stop":1755291258725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.functional\n    @pytest.mark.security\n    @pytest.mark.smoke\n    def test_TC40_Verificar_que_no_se_permita_obtener_la_lista_de_atributos_sin_token():\n        url = EndpointAttributes.attributes()\n        response= SyliusRequest.get(url,{})\n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/catalog/attributes/test_HU09_LQ_GET_AttributesList.py:49: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","steps":[],"attachments":[{"uid":"e26383bcba7ce85f","name":"log","source":"e26383bcba7ce85f.txt","type":"text/plain","size":206}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"security"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.catalog.attributes"},{"name":"suite","value":"test_HU09_LQ_GET_AttributesList"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2507-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.attributes.test_HU09_LQ_GET_AttributesList"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":2,"unknown":0,"total":3},"items":[{"uid":"6a9949a096f5a88b","reportUrl":"https://Elv500.github.io/Softsign/27//#testresult/6a9949a096f5a88b","status":"passed","time":{"start":1755149078129,"stop":1755149078704,"duration":575}},{"uid":"706962b85c99e570","reportUrl":"https://Elv500.github.io/Softsign/26//#testresult/706962b85c99e570","status":"passed","time":{"start":1755146199347,"stop":1755146199869,"duration":522}}]},"tags":["security","functional","smoke"]},"source":"a5d4d6515328cd5a.json","parameterValues":[]}