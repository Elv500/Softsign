{"uid":"3252f556fd9d58bc","name":"test_TC188_verificar_acceso_token_expirado","fullName":"tests.customer.groups.test_HU01_PD_GET_Customer_Group#test_TC188_verificar_acceso_token_expirado","historyId":"1dd67707bb6c1f59636dfdb46c7ec088","time":{"start":1755291275750,"stop":1755291276178,"duration":428},"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.security\n    @pytest.mark.negative\n    @pytest.mark.regression\n    def test_TC188_verificar_acceso_token_expirado():\n    \n        expired_headers = {\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.ey\"\n                           \"JpYXQiOjE3NTQyMzQzODksImV4cCI6MTc1NDIzNzk4OSwicm9sZXMiOlsiUk9MRV\"\n                           \"9BRE1JTklTVFJBVElPTl9BQ0NFU1MiLCJST0xFX0FQSV9BQ0NFU1MiXSwidXNlcm\"\n                           \"5hbWUiOiJhcGkifQ.GmVMaimodyHNL8R9wToFg5RoOTwd9Rjf2WVqI_WoZJjAZJ1y\"\n                           \"kbaBlsbC4TWwPqZuaEpPhFJlRotqezn0_HF7MumgZBK1rvmfX4M7QqQBeeohmZmt8\"\n                           \"JB0eAjaqn-GtmmWeXrV1bCHxvqb-W1pbPsBQ1leKfnYeUnMPwrhPBsqdOAAEVK0ZWj\"\n                           \"_LAbgYWlViEZ8uw7qxDR5gzmd6GwKEawLDlMa9Lj5Hz8sG7NuYonU-b38U_mOkN57x\"\n                           \"r4SSL7DTkdk-q9rIOt-I056tzCKPR2Fx0CxCSO7MMP9pVN9sHMz53srPpHTvwtRCZS\"\n                           \"gzRB4PGU6mzsmfl4l7sLE72OouL-y_eVqgKJ-7YG5D_ZNp8vgaALqYDzbAySDb_ktF\"\n                           \"tCCWzhMxasoBOLoCzy3J1URprwxyPcYabntVyr8O42mkIjh1iGH-IASK9M614epkcB\"\n                           \"cSIbyB5cwkTwfBCAhMwqot6Ec6ozT8VKmfYAZdtisKpVarQrs25CRzdT1kZrRr57Fs\"\n                           \"GgLQgf05K39QLM5wvjEd2i7NiRwCPVeqFVzJgBKN0DQBLK3a7zoN3a_mV7KCGmxoTk\"\n                           \"0RfYEhv00EpxVjMUWg40Cpg22YlFD1WZNxrN1r4Wt0LqkZfCfwPzD9Ci2X45oDjzPm\"\n                           \"Iu6goaWDaaSgpaIeB6pxy-AuWi3ofhXlZkvlTgEm0\"}\n    \n        endpoint = EndpointCustomerGroup.customer_group()\n        response = SyliusRequest.get(endpoint, expired_headers)\n    \n        log_request_response(endpoint, response, headers=expired_headers)\n    \n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/customer/groups/test_HU01_PD_GET_Customer_Group.py:228: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291258725,"stop":1755291258725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.security\n    @pytest.mark.negative\n    @pytest.mark.regression\n    def test_TC188_verificar_acceso_token_expirado():\n    \n        expired_headers = {\"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.ey\"\n                           \"JpYXQiOjE3NTQyMzQzODksImV4cCI6MTc1NDIzNzk4OSwicm9sZXMiOlsiUk9MRV\"\n                           \"9BRE1JTklTVFJBVElPTl9BQ0NFU1MiLCJST0xFX0FQSV9BQ0NFU1MiXSwidXNlcm\"\n                           \"5hbWUiOiJhcGkifQ.GmVMaimodyHNL8R9wToFg5RoOTwd9Rjf2WVqI_WoZJjAZJ1y\"\n                           \"kbaBlsbC4TWwPqZuaEpPhFJlRotqezn0_HF7MumgZBK1rvmfX4M7QqQBeeohmZmt8\"\n                           \"JB0eAjaqn-GtmmWeXrV1bCHxvqb-W1pbPsBQ1leKfnYeUnMPwrhPBsqdOAAEVK0ZWj\"\n                           \"_LAbgYWlViEZ8uw7qxDR5gzmd6GwKEawLDlMa9Lj5Hz8sG7NuYonU-b38U_mOkN57x\"\n                           \"r4SSL7DTkdk-q9rIOt-I056tzCKPR2Fx0CxCSO7MMP9pVN9sHMz53srPpHTvwtRCZS\"\n                           \"gzRB4PGU6mzsmfl4l7sLE72OouL-y_eVqgKJ-7YG5D_ZNp8vgaALqYDzbAySDb_ktF\"\n                           \"tCCWzhMxasoBOLoCzy3J1URprwxyPcYabntVyr8O42mkIjh1iGH-IASK9M614epkcB\"\n                           \"cSIbyB5cwkTwfBCAhMwqot6Ec6ozT8VKmfYAZdtisKpVarQrs25CRzdT1kZrRr57Fs\"\n                           \"GgLQgf05K39QLM5wvjEd2i7NiRwCPVeqFVzJgBKN0DQBLK3a7zoN3a_mV7KCGmxoTk\"\n                           \"0RfYEhv00EpxVjMUWg40Cpg22YlFD1WZNxrN1r4Wt0LqkZfCfwPzD9Ci2X45oDjzPm\"\n                           \"Iu6goaWDaaSgpaIeB6pxy-AuWi3ofhXlZkvlTgEm0\"}\n    \n        endpoint = EndpointCustomerGroup.customer_group()\n        response = SyliusRequest.get(endpoint, expired_headers)\n    \n        log_request_response(endpoint, response, headers=expired_headers)\n    \n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/customer/groups/test_HU01_PD_GET_Customer_Group.py:228: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","steps":[],"attachments":[{"uid":"7ab6ea0009cd2a1e","name":"log","source":"7ab6ea0009cd2a1e.txt","type":"text/plain","size":27386}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"negative"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests.customer.groups"},{"name":"suite","value":"test_HU01_PD_GET_Customer_Group"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2507-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.groups.test_HU01_PD_GET_Customer_Group"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"5bf51b5f3b7660d3","reportUrl":"https://Elv500.github.io/Softsign/27//#testresult/5bf51b5f3b7660d3","status":"passed","time":{"start":1755149170002,"stop":1755149170198,"duration":196}}]},"tags":["negative","security","regression"]},"source":"3252f556fd9d58bc.json","parameterValues":[]}