{"uid":"73ffcbefac76eedc","name":"test_TC187_verificar_acceso_token_invalido","fullName":"tests.customer.groups.test_HU01_PD_GET_Customer_Group#test_TC187_verificar_acceso_token_invalido","historyId":"70a6d4c4cf96c44e674ea36b3dc79512","time":{"start":1755291275531,"stop":1755291275741,"duration":210},"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.security\n    @pytest.mark.negative\n    @pytest.mark.regression\n    def test_TC187_verificar_acceso_token_invalido():\n        invalid_token = \"token_invalido_12345\"\n    \n        invalid_headers = {\"Authorization\": f\"Bearer {invalid_token}\"}\n        endpoint = EndpointCustomerGroup.customer_group()\n        response = SyliusRequest.get(endpoint, invalid_headers)\n    \n        log_request_response(endpoint, response, headers=invalid_headers)\n    \n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/customer/groups/test_HU01_PD_GET_Customer_Group.py:199: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291258725,"stop":1755291258725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.security\n    @pytest.mark.negative\n    @pytest.mark.regression\n    def test_TC187_verificar_acceso_token_invalido():\n        invalid_token = \"token_invalido_12345\"\n    \n        invalid_headers = {\"Authorization\": f\"Bearer {invalid_token}\"}\n        endpoint = EndpointCustomerGroup.customer_group()\n        response = SyliusRequest.get(endpoint, invalid_headers)\n    \n        log_request_response(endpoint, response, headers=invalid_headers)\n    \n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/customer/groups/test_HU01_PD_GET_Customer_Group.py:199: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","steps":[],"attachments":[{"uid":"7a89564d05db129c","name":"log","source":"7a89564d05db129c.txt","type":"text/plain","size":26540}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"negative"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests.customer.groups"},{"name":"suite","value":"test_HU01_PD_GET_Customer_Group"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2507-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.groups.test_HU01_PD_GET_Customer_Group"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"a1d84d58710f7209","reportUrl":"https://Elv500.github.io/Softsign/27//#testresult/a1d84d58710f7209","status":"passed","time":{"start":1755149169803,"stop":1755149170000,"duration":197}}]},"tags":["negative","security","regression"]},"source":"73ffcbefac76eedc.json","parameterValues":[]}