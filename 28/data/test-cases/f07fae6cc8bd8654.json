{"uid":"f07fae6cc8bd8654","name":"test_TC250_Verificar_no_actualizar_attribute_con_token_invalido","fullName":"tests.catalog.attributes.test_HU12_LQ_PUT_Attributes#test_TC250_Verificar_no_actualizar_attribute_con_token_invalido","historyId":"c89a458401613a7d22235e7e2b72e910","time":{"start":1755291263698,"stop":1755291263923,"duration":225},"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.security\n    @pytest.mark.smoke\n    def test_TC250_Verificar_no_actualizar_attribute_con_token_invalido():\n        codigo_existente = \"retail\"\n        data = {\n            \"name\": \"Nombre Actualizado Token Inválido\"\n        }\n        invalid_headers = {\"Authorization\": \"Bearer token_invalido\"}\n        endpoint = EndpointAttributes.code(codigo_existente)\n        response = SyliusRequest.put(endpoint, invalid_headers, data)\n    \n        log_request_response(endpoint, response, headers=invalid_headers, payload=data)\n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/catalog/attributes/test_HU12_LQ_PUT_Attributes.py:140: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291258725,"stop":1755291258725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.security\n    @pytest.mark.smoke\n    def test_TC250_Verificar_no_actualizar_attribute_con_token_invalido():\n        codigo_existente = \"retail\"\n        data = {\n            \"name\": \"Nombre Actualizado Token Inválido\"\n        }\n        invalid_headers = {\"Authorization\": \"Bearer token_invalido\"}\n        endpoint = EndpointAttributes.code(codigo_existente)\n        response = SyliusRequest.put(endpoint, invalid_headers, data)\n    \n        log_request_response(endpoint, response, headers=invalid_headers, payload=data)\n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/catalog/attributes/test_HU12_LQ_PUT_Attributes.py:140: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","steps":[],"attachments":[{"uid":"44ef88c6b12741f8","name":"log","source":"44ef88c6b12741f8.txt","type":"text/plain","size":26654}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests.catalog.attributes"},{"name":"suite","value":"test_HU12_LQ_PUT_Attributes"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2507-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.attributes.test_HU12_LQ_PUT_Attributes"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"8d9b3c961a7193d7","reportUrl":"https://Elv500.github.io/Softsign/27//#testresult/8d9b3c961a7193d7","status":"passed","time":{"start":1755149083689,"stop":1755149083872,"duration":183}}]},"tags":["security","smoke"]},"source":"f07fae6cc8bd8654.json","parameterValues":[]}