{"uid":"9ecf6b8eb1345dae","name":"test_TC243_verificar_acceso_token_expirado_tax_category","fullName":"tests.configuration.tax_categories.test_HU08_KG_GET_TaxCatergoryList#test_TC243_verificar_acceso_token_expirado_tax_category","historyId":"3c575cd39a39ea6786d8dbcca77b8027","time":{"start":1755291273091,"stop":1755291273298,"duration":207},"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.security\n    @pytest.mark.negative\n    @pytest.mark.regression\n    def test_TC243_verificar_acceso_token_expirado_tax_category():\n        expired_headers = {\n            \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTQyMzQzODksImV4cCI6MTc1NDIzNzk4OSwicm9sZXMiOlsiUk9MRV9BRE1JTklTVFJBVElPTl9BQ0NFU1MiLCJST0xFX0FQSV9BQ0NFU1MiXSwidXNlcm5hbWUiOiJhcGkifQ.GmVMaimodyHNL8R9wToFg5RoOTwd9Rjf2WVqI_WoZJjAZJ1ykbaBlsbC4TWwPqZuaEpPhFJlRotqezn0_HF7MumgZBK1rvmfX4M7QqQBeeohmZmt8JB0eAjaqn-GtmmWeXrV1bCHxvqb-W1pbPsBQ1leKfnYeUnMPwrhPBsqdOAAEVK0ZWj_LAbgYWlViEZ8uw7qxDR5gzmd6GwKEawLDlMa9Lj5Hz8sG7NuYonU-b38U_mOkN57xr4SSL7DTkdk-q9rIOt-I056tzCKPR2Fx0CxCSO7MMP9pVN9sHMz53srPpHTvwtRCZSgzRB4PGU6mzsmfl4l7sLE72OouL-y_eVqgKJ-7YG5D_ZNp8vgaALqYDzbAySDb_ktFtCCWzhMxasoBOLoCzy3J1URprwxyPcYabntVyr8O42mkIjh1iGH-IASK9M614epkcBcSIbyB5cwkTwfBCAhMwqot6Ec6ozT8VKmfYAZdtisKpVarQrs25CRzdT1kZrRr57FsGgLQgf05K39QLM5wvjEd2i7NiRwCPVeqFVzJgBKN0DQBLK3a7zoN3a_mV7KCGmxoTk0RfYEhv00EpxVjMUWg40Cpg22YlFD1WZNxrN1r4Wt0LqkZfCfwPzD9Ci2X45oDjzPmIu6goaWDaaSgpaIeB6pxy-AuWi3ofhXlZkvlTgEm0\"\n        }\n        endpoint = EndpointTaxCategory.tax_category()\n        response = requests.get(endpoint, headers=expired_headers)\n        log_request_response(endpoint, response, headers=expired_headers)\n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/configuration/tax_categories/test_HU08_KG_GET_TaxCatergoryList.py:150: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","flaky":false,"newFailed":true,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291258725,"stop":1755291258725,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError","statusTrace":"@pytest.mark.security\n    @pytest.mark.negative\n    @pytest.mark.regression\n    def test_TC243_verificar_acceso_token_expirado_tax_category():\n        expired_headers = {\n            \"Authorization\": \"Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTQyMzQzODksImV4cCI6MTc1NDIzNzk4OSwicm9sZXMiOlsiUk9MRV9BRE1JTklTVFJBVElPTl9BQ0NFU1MiLCJST0xFX0FQSV9BQ0NFU1MiXSwidXNlcm5hbWUiOiJhcGkifQ.GmVMaimodyHNL8R9wToFg5RoOTwd9Rjf2WVqI_WoZJjAZJ1ykbaBlsbC4TWwPqZuaEpPhFJlRotqezn0_HF7MumgZBK1rvmfX4M7QqQBeeohmZmt8JB0eAjaqn-GtmmWeXrV1bCHxvqb-W1pbPsBQ1leKfnYeUnMPwrhPBsqdOAAEVK0ZWj_LAbgYWlViEZ8uw7qxDR5gzmd6GwKEawLDlMa9Lj5Hz8sG7NuYonU-b38U_mOkN57xr4SSL7DTkdk-q9rIOt-I056tzCKPR2Fx0CxCSO7MMP9pVN9sHMz53srPpHTvwtRCZSgzRB4PGU6mzsmfl4l7sLE72OouL-y_eVqgKJ-7YG5D_ZNp8vgaALqYDzbAySDb_ktFtCCWzhMxasoBOLoCzy3J1URprwxyPcYabntVyr8O42mkIjh1iGH-IASK9M614epkcBcSIbyB5cwkTwfBCAhMwqot6Ec6ozT8VKmfYAZdtisKpVarQrs25CRzdT1kZrRr57FsGgLQgf05K39QLM5wvjEd2i7NiRwCPVeqFVzJgBKN0DQBLK3a7zoN3a_mV7KCGmxoTk0RfYEhv00EpxVjMUWg40Cpg22YlFD1WZNxrN1r4Wt0LqkZfCfwPzD9Ci2X45oDjzPmIu6goaWDaaSgpaIeB6pxy-AuWi3ofhXlZkvlTgEm0\"\n        }\n        endpoint = EndpointTaxCategory.tax_category()\n        response = requests.get(endpoint, headers=expired_headers)\n        log_request_response(endpoint, response, headers=expired_headers)\n>       AssertionStatusCode.assert_status_code_401(response)\n\ntests/configuration/tax_categories/test_HU08_KG_GET_TaxCatergoryList.py:150: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [404]>\n\n    @staticmethod\n    def assert_status_code_401(response):\n>       assert response.status_code == 401\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:27: AssertionError","steps":[],"attachments":[{"uid":"e955779aede27420","name":"log","source":"e955779aede27420.txt","type":"text/plain","size":27384}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[],"labels":[{"name":"tag","value":"regression"},{"name":"tag","value":"negative"},{"name":"tag","value":"security"},{"name":"parentSuite","value":"tests.configuration.tax_categories"},{"name":"suite","value":"test_HU08_KG_GET_TaxCatergoryList"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2507-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.configuration.tax_categories.test_HU08_KG_GET_TaxCatergoryList"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":1,"broken":0,"skipped":0,"passed":1,"unknown":0,"total":2},"items":[{"uid":"274c6b124720f29a","reportUrl":"https://Elv500.github.io/Softsign/27//#testresult/274c6b124720f29a","status":"passed","time":{"start":1755149139374,"stop":1755149139562,"duration":188}}]},"tags":["negative","security","regression"]},"source":"9ecf6b8eb1345dae.json","parameterValues":[]}