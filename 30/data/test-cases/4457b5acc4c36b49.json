{"uid":"4457b5acc4c36b49","name":"test_tc311_Verificar_que_una_opci贸n_existente_se_actualiza_correctamente","fullName":"tests.catalog.options.test_HU25_ES_PUT_ProductOption#test_tc311_Verificar_que_una_opci贸n_existente_se_actualiza_correctamente","historyId":"32f6966b0f345e8ae618d0449cb13f2e","time":{"start":1755291851535,"stop":1755291851886,"duration":351},"status":"failed","statusMessage":"Failed: Schema file 'options_edit_output_schema.json' not found","statusTrace":"schema_file = 'options_edit_output_schema.json', module = 'Options'\n\n    def load_schema_resource(schema_file, module=None):\n        try:\n>           with resources_schemas_path(schema_file, module).open(encoding=\"utf-8\") as f:\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nutils/load_resources.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = PosixPath('/home/runner/work/Softsign/Softsign/src/resources/schemas/Options/options_edit_output_schema.json')\nmode = 'r', buffering = -1, encoding = 'utf-8', errors = None, newline = None\n\n    def open(self, mode='r', buffering=-1, encoding=None,\n             errors=None, newline=None):\n        \"\"\"\n        Open the file pointed to by this path and return a file object, as\n        the built-in open() function does.\n        \"\"\"\n        if \"b\" not in mode:\n            encoding = io.text_encoding(encoding)\n>       return io.open(self, mode, buffering, encoding, errors, newline)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       FileNotFoundError: [Errno 2] No such file or directory: '/home/runner/work/Softsign/Softsign/src/resources/schemas/Options/options_edit_output_schema.json'\n\n/opt/hostedtoolcache/Python/3.13.6/x64/lib/python3.13/pathlib/_local.py:537: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nresponse = {'@context': '/api/v2/contexts/ProductOption', '@id': '/api/v2/admin/product-options/test_1755291851_VM98', '@type': 'ProductOption', 'code': 'test_1755291851_VM98', ...}\nschema_file = 'options_edit_output_schema.json', module = 'Options'\n\n    @staticmethod\n    def validate_json_schema(response, schema_file, module=None):\n        try:\n>           schema = load_schema_resource(schema_file, module)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nsrc/assertions/schema_assertions.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nschema_file = 'options_edit_output_schema.json', module = 'Options'\n\n    def load_schema_resource(schema_file, module=None):\n        try:\n            with resources_schemas_path(schema_file, module).open(encoding=\"utf-8\") as f:\n                return json.load(f)\n        except FileNotFoundError:\n>           raise FileNotFoundError(f\"Schema file '{schema_file}' not found in module '{module}'\")\nE           FileNotFoundError: Schema file 'options_edit_output_schema.json' not found in module 'Options'\n\nutils/load_resources.py:17: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nsetup_options_cleanup = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUyOTE3OTEsImV4cCI6MTc1NTI5NTM5MSwicm9sZX...QBlrx_evYpDQP9sd4tsrCP6oDPQhx870'}, <function setup_options_cleanup.<locals>.add_option_for_cleanup at 0x7f07211adda0>)\n\n    @pytest.mark.functional\n    @pytest.mark.smoke\n    def test_tc311_Verificar_que_una_opci贸n_existente_se_actualiza_correctamente(setup_options_cleanup):\n        headers, add_option_for_cleanup = setup_options_cleanup\n        payload = generate_options_source_data()\n        response = SyliusRequest.post(EndpointOptions.options(), headers, payload)\n        AssertionStatusCode.assert_status_code_201(response)\n        code = response.json()[\"code\"]\n        add_option_for_cleanup(code)\n        en_us_translation = response.json()[\"translations\"].get(\"en_US\", {})\n        translation_id = en_us_translation.get(\"@id\")\n        updated_payload = generate_updated_options_payload(code, translation_id)\n        response = SyliusRequest().put_with_custom_headers(EndpointOptions.code(code), headers, updated_payload)\n        log_request_response(EndpointOptions.code(code), response, headers, updated_payload)\n        AssertionStatusCode.assert_status_code_200(response)\n>       AssertionOptions.assert_options_put_output_schema(response.json())\n\ntests/catalog/options/test_HU25_ES_PUT_ProductOption.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/assertions/options_assertions.py:25: in assert_options_put_output_schema\n    return AssertionSchemas().validate_json_schema(response, \"options_edit_output_schema.json\", AssertionOptions.MODULE)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = {'@context': '/api/v2/contexts/ProductOption', '@id': '/api/v2/admin/product-options/test_1755291851_VM98', '@type': 'ProductOption', 'code': 'test_1755291851_VM98', ...}\nschema_file = 'options_edit_output_schema.json', module = 'Options'\n\n    @staticmethod\n    def validate_json_schema(response, schema_file, module=None):\n        try:\n            schema = load_schema_resource(schema_file, module)\n        except FileNotFoundError:\n>           pytest.fail(f\"Schema file '{schema_file}' not found\")\nE           Failed: Schema file 'options_edit_output_schema.json' not found\n\nsrc/assertions/schema_assertions.py:13: Failed","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291791248,"stop":1755291791249,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755291791249,"stop":1755291791807,"duration":558},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_options_cleanup","time":{"start":1755291851535,"stop":1755291851535,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"Failed: Schema file 'options_edit_output_schema.json' not found","statusTrace":"schema_file = 'options_edit_output_schema.json', module = 'Options'\n\n    def load_schema_resource(schema_file, module=None):\n        try:\n>           with resources_schemas_path(schema_file, module).open(encoding=\"utf-8\") as f:\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nutils/load_resources.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = PosixPath('/home/runner/work/Softsign/Softsign/src/resources/schemas/Options/options_edit_output_schema.json')\nmode = 'r', buffering = -1, encoding = 'utf-8', errors = None, newline = None\n\n    def open(self, mode='r', buffering=-1, encoding=None,\n             errors=None, newline=None):\n        \"\"\"\n        Open the file pointed to by this path and return a file object, as\n        the built-in open() function does.\n        \"\"\"\n        if \"b\" not in mode:\n            encoding = io.text_encoding(encoding)\n>       return io.open(self, mode, buffering, encoding, errors, newline)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       FileNotFoundError: [Errno 2] No such file or directory: '/home/runner/work/Softsign/Softsign/src/resources/schemas/Options/options_edit_output_schema.json'\n\n/opt/hostedtoolcache/Python/3.13.6/x64/lib/python3.13/pathlib/_local.py:537: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nresponse = {'@context': '/api/v2/contexts/ProductOption', '@id': '/api/v2/admin/product-options/test_1755291851_VM98', '@type': 'ProductOption', 'code': 'test_1755291851_VM98', ...}\nschema_file = 'options_edit_output_schema.json', module = 'Options'\n\n    @staticmethod\n    def validate_json_schema(response, schema_file, module=None):\n        try:\n>           schema = load_schema_resource(schema_file, module)\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nsrc/assertions/schema_assertions.py:11: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nschema_file = 'options_edit_output_schema.json', module = 'Options'\n\n    def load_schema_resource(schema_file, module=None):\n        try:\n            with resources_schemas_path(schema_file, module).open(encoding=\"utf-8\") as f:\n                return json.load(f)\n        except FileNotFoundError:\n>           raise FileNotFoundError(f\"Schema file '{schema_file}' not found in module '{module}'\")\nE           FileNotFoundError: Schema file 'options_edit_output_schema.json' not found in module 'Options'\n\nutils/load_resources.py:17: FileNotFoundError\n\nDuring handling of the above exception, another exception occurred:\n\nsetup_options_cleanup = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUyOTE3OTEsImV4cCI6MTc1NTI5NTM5MSwicm9sZX...QBlrx_evYpDQP9sd4tsrCP6oDPQhx870'}, <function setup_options_cleanup.<locals>.add_option_for_cleanup at 0x7f07211adda0>)\n\n    @pytest.mark.functional\n    @pytest.mark.smoke\n    def test_tc311_Verificar_que_una_opci贸n_existente_se_actualiza_correctamente(setup_options_cleanup):\n        headers, add_option_for_cleanup = setup_options_cleanup\n        payload = generate_options_source_data()\n        response = SyliusRequest.post(EndpointOptions.options(), headers, payload)\n        AssertionStatusCode.assert_status_code_201(response)\n        code = response.json()[\"code\"]\n        add_option_for_cleanup(code)\n        en_us_translation = response.json()[\"translations\"].get(\"en_US\", {})\n        translation_id = en_us_translation.get(\"@id\")\n        updated_payload = generate_updated_options_payload(code, translation_id)\n        response = SyliusRequest().put_with_custom_headers(EndpointOptions.code(code), headers, updated_payload)\n        log_request_response(EndpointOptions.code(code), response, headers, updated_payload)\n        AssertionStatusCode.assert_status_code_200(response)\n>       AssertionOptions.assert_options_put_output_schema(response.json())\n\ntests/catalog/options/test_HU25_ES_PUT_ProductOption.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nsrc/assertions/options_assertions.py:25: in assert_options_put_output_schema\n    return AssertionSchemas().validate_json_schema(response, \"options_edit_output_schema.json\", AssertionOptions.MODULE)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = {'@context': '/api/v2/contexts/ProductOption', '@id': '/api/v2/admin/product-options/test_1755291851_VM98', '@type': 'ProductOption', 'code': 'test_1755291851_VM98', ...}\nschema_file = 'options_edit_output_schema.json', module = 'Options'\n\n    @staticmethod\n    def validate_json_schema(response, schema_file, module=None):\n        try:\n            schema = load_schema_resource(schema_file, module)\n        except FileNotFoundError:\n>           pytest.fail(f\"Schema file '{schema_file}' not found\")\nE           Failed: Schema file 'options_edit_output_schema.json' not found\n\nsrc/assertions/schema_assertions.py:13: Failed","steps":[],"attachments":[{"uid":"dcbf7e63686d43cd","name":"log","source":"dcbf7e63686d43cd.txt","type":"text/plain","size":2708},{"uid":"3919d8bfad2eb0f9","name":"stdout","source":"3919d8bfad2eb0f9.txt","type":"text/plain","size":39}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup_options_cleanup::0","time":{"start":1755291851909,"stop":1755291852063,"duration":154},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"smoke"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.catalog.options"},{"name":"suite","value":"test_HU25_ES_PUT_ProductOption"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2434-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.options.test_HU25_ES_PUT_ProductOption"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"history":{"statistic":{"failed":2,"broken":1,"skipped":0,"passed":0,"unknown":0,"total":3},"items":[{"uid":"d884b6ad69d5410","reportUrl":"https://Elv500.github.io/Softsign/29//#testresult/d884b6ad69d5410","status":"failed","statusDetails":"Failed: Schema file 'options_edit_output_schema.json' not found","time":{"start":1755291508809,"stop":1755291509185,"duration":376}},{"uid":"bad6a8afb09a92af","reportUrl":"https://Elv500.github.io/Softsign/28//#testresult/bad6a8afb09a92af","status":"broken","statusDetails":"requests.exceptions.JSONDecodeError: Expecting value: line 3 column 1 (char 2)","time":{"start":1755291270977,"stop":1755291270977,"duration":0}}]},"tags":["functional","smoke"]},"source":"4457b5acc4c36b49.json","parameterValues":[]}