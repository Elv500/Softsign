{"uid":"2ca310ad657383","name":"test_TC266_crear_inventory_con_name_extremadamente_largo","fullName":"tests.catalog.inventory.test_HU05_EA_POST_Inventory#test_TC266_crear_inventory_con_name_extremadamente_largo","historyId":"09f9e0b00943cc95d06989f6cc600897","time":{"start":1755291832661,"stop":1755291832832,"duration":171},"status":"skipped","statusMessage":"XFAIL BUG266: El backend responde status=500 en lugar de validar longitud de 'name'\n\nAssertionError","statusTrace":"setup_add_inventory = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUyOTE3OTEsImV4cCI6MTc1NTI5NTM5MSwicm9sZX...cb3tm-VaGwtg697_GMRe8IRzvXH8aOoxoVptgFtz1q5bqmN1j7hOVB3HwybkhaCCQZyLni90w618CAE3QBlrx_evYpDQP9sd4tsrCP6oDPQhx870'}, [])\n\n    @pytest.mark.regression\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"BUG266: El backend responde status=500 en lugar de validar longitud de 'name'\", run=True)\n    def test_TC266_crear_inventory_con_name_extremadamente_largo(setup_add_inventory):\n        headers, _ = setup_add_inventory\n        payload = create_inventory_data(name=\"N\" * 256)\n        url = EndpointInventory.inventory()\n        AssertionInventory.assert_inventory_add_input_schema(payload)\n        AssertionInventoryCreate.assert_inventory_payload(payload, required_only=True)\n        response = SyliusRequest.post(url, headers, payload)\n        log_request_response(url, response, headers, payload)\n>       AssertionStatusCode.assert_status_code_422(response)\n\ntests/catalog/inventory/test_HU05_EA_POST_Inventory.py:349: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>\n\n    @staticmethod\n    def assert_status_code_422(response):\n>       assert response.status_code == 422\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:59: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291791248,"stop":1755291791249,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755291791249,"stop":1755291791807,"duration":558},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_add_inventory","time":{"start":1755291832660,"stop":1755291832660,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL BUG266: El backend responde status=500 en lugar de validar longitud de 'name'\n\nAssertionError","statusTrace":"setup_add_inventory = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUyOTE3OTEsImV4cCI6MTc1NTI5NTM5MSwicm9sZX...cb3tm-VaGwtg697_GMRe8IRzvXH8aOoxoVptgFtz1q5bqmN1j7hOVB3HwybkhaCCQZyLni90w618CAE3QBlrx_evYpDQP9sd4tsrCP6oDPQhx870'}, [])\n\n    @pytest.mark.regression\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"BUG266: El backend responde status=500 en lugar de validar longitud de 'name'\", run=True)\n    def test_TC266_crear_inventory_con_name_extremadamente_largo(setup_add_inventory):\n        headers, _ = setup_add_inventory\n        payload = create_inventory_data(name=\"N\" * 256)\n        url = EndpointInventory.inventory()\n        AssertionInventory.assert_inventory_add_input_schema(payload)\n        AssertionInventoryCreate.assert_inventory_payload(payload, required_only=True)\n        response = SyliusRequest.post(url, headers, payload)\n        log_request_response(url, response, headers, payload)\n>       AssertionStatusCode.assert_status_code_422(response)\n\ntests/catalog/inventory/test_HU05_EA_POST_Inventory.py:349: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [500]>\n\n    @staticmethod\n    def assert_status_code_422(response):\n>       assert response.status_code == 422\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:59: AssertionError","steps":[],"attachments":[{"uid":"84397cd3a5611156","name":"log","source":"84397cd3a5611156.txt","type":"text/plain","size":2101}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup_add_inventory::0","time":{"start":1755291832841,"stop":1755291832841,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"negative"},{"name":"tag","value":"functional"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.catalog.inventory"},{"name":"suite","value":"test_HU05_EA_POST_Inventory"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2434-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.inventory.test_HU05_EA_POST_Inventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":4,"passed":0,"unknown":0,"total":4},"items":[{"uid":"6ac3afc1e8295f2e","reportUrl":"https://Elv500.github.io/Softsign/29//#testresult/6ac3afc1e8295f2e","status":"skipped","statusDetails":"XFAIL BUG266: El backend responde status=500 en lugar de validar longitud de 'name'\n\nAssertionError","time":{"start":1755291488837,"stop":1755291489021,"duration":184}},{"uid":"437529ed1a146b9d","reportUrl":"https://Elv500.github.io/Softsign/28//#testresult/437529ed1a146b9d","status":"skipped","statusDetails":"XFAIL BUG266: El backend responde status=500 en lugar de validar longitud de 'name'\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 3 column 1 (char 2)","time":{"start":1755291268040,"stop":1755291268040,"duration":0}},{"uid":"d59bb76b59af5e6b","reportUrl":"https://Elv500.github.io/Softsign/27//#testresult/d59bb76b59af5e6b","status":"skipped","statusDetails":"XFAIL BUG266: El backend responde status=500 en lugar de validar longitud de 'name'\n\nAssertionError","time":{"start":1755149105855,"stop":1755149106204,"duration":349}}]},"tags":["negative","functional","regression"]},"source":"2ca310ad657383.json","parameterValues":[]}