{"uid":"84fd45109f8fa975","name":"test_TC73_actualizacion_formato_invalido_priority","fullName":"tests.catalog.inventory.test_HU15_EA_PUT_Inventory#test_TC73_actualizacion_formato_invalido_priority","historyId":"5155a7efe24b4d608abc442f106b0b8d","time":{"start":1755552445584,"stop":1755552446649,"duration":1065},"status":"skipped","statusMessage":"XFAIL BUG73: Permite editar un inventario con prioridad negativa\n\nAssertionError","statusTrace":"setup_edit_inventory = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU1NTIyNDcsImV4cCI6MTc1NTU1NTg0Nywicm9sZX...urces/walk-his-talk-the', '@type': 'InventorySource', 'address': '/api/v2/admin/inventory-source-addresses/4647', ...})\n\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.high\n    @pytest.mark.xfail(reason=\"BUG73: Permite editar un inventario con prioridad negativa\", run=True)\n    def test_TC73_actualizacion_formato_invalido_priority(setup_edit_inventory):\n        headers, inventory = setup_edit_inventory\n        url = EndpointInventory.code(inventory[\"code\"])\n        responseBefore = SyliusRequest.get(url, headers)\n        AssertionInventory.assert_inventory_code_schema(responseBefore.json())\n        log_request_response(url, responseBefore)\n        payload = generate_inventory_source_data()\n        payload[\"priority\"] = -1\n        response = SyliusRequest.put(url, headers, payload)\n        AssertionInventory.assert_inventory_edit_input_schema(payload)\n>       AssertionStatusCode.assert_status_code_400(response)\n\ntests/catalog/inventory/test_HU15_EA_PUT_Inventory.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n>       assert response.status_code == 400\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:23: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755552246620,"stop":1755552246621,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755552246621,"stop":1755552247430,"duration":809},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_edit_inventory","time":{"start":1755552445013,"stop":1755552445584,"duration":571},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL BUG73: Permite editar un inventario con prioridad negativa\n\nAssertionError","statusTrace":"setup_edit_inventory = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU1NTIyNDcsImV4cCI6MTc1NTU1NTg0Nywicm9sZX...urces/walk-his-talk-the', '@type': 'InventorySource', 'address': '/api/v2/admin/inventory-source-addresses/4647', ...})\n\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.high\n    @pytest.mark.xfail(reason=\"BUG73: Permite editar un inventario con prioridad negativa\", run=True)\n    def test_TC73_actualizacion_formato_invalido_priority(setup_edit_inventory):\n        headers, inventory = setup_edit_inventory\n        url = EndpointInventory.code(inventory[\"code\"])\n        responseBefore = SyliusRequest.get(url, headers)\n        AssertionInventory.assert_inventory_code_schema(responseBefore.json())\n        log_request_response(url, responseBefore)\n        payload = generate_inventory_source_data()\n        payload[\"priority\"] = -1\n        response = SyliusRequest.put(url, headers, payload)\n        AssertionInventory.assert_inventory_edit_input_schema(payload)\n>       AssertionStatusCode.assert_status_code_400(response)\n\ntests/catalog/inventory/test_HU15_EA_PUT_Inventory.py:102: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n>       assert response.status_code == 400\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:23: AssertionError","steps":[],"attachments":[{"uid":"f36e429869345c91","name":"log","source":"f36e429869345c91.txt","type":"text/plain","size":1714}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup_edit_inventory::0","time":{"start":1755552446655,"stop":1755552446891,"duration":236},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"high"},{"name":"tag","value":"negative"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.catalog.inventory"},{"name":"suite","value":"test_HU15_EA_PUT_Inventory"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2380-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.inventory.test_HU15_EA_PUT_Inventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":2,"passed":0,"unknown":0,"total":2},"items":[{"uid":"899f9447a7cfd460","reportUrl":"https://Elv500.github.io/Softsign/57//#testresult/899f9447a7cfd460","status":"skipped","statusDetails":"XFAIL BUG73: Permite editar un inventario con prioridad negativa\n\nAssertionError","time":{"start":1755544186770,"stop":1755544188437,"duration":1667}}]},"tags":["high","negative","functional"]},"source":"84fd45109f8fa975.json","parameterValues":[]}