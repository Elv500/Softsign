{"name": "test_TC221_tax_category_nombre_espacio_en_blanco[\\t]", "status": "skipped", "statusDetails": {"message": "XFAIL known issue La app permite espacios vacios BUG\n\nAssertionError: El mensaje de error no indica que 'name' es obligatorio. Violations: [{'propertyPath': 'name', 'message': 'Tax category name must be at least 2 characters long.', 'code': '9ff3fdc4-b214-49db-8718-39c315e33d45'}]", "trace": "setup_add_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU0MDQwMjIsImV4cCI6MTc1NTQwNzYyMiwicm9sZX...W6nVJFQCFdeI9hboZjhwfeYkneLheQdFe9GWuEDeXCaWakEoNRpe7nxeFJDt8s4OlXqAEjnDTAvypDnAIfn1m0fe-IZEZHq34BYYlPDri7yX76yc'}, [])\ninvalid_name = '\\t'\n\n    @pytest.mark.functional\n    @pytest.mark.smoke\n    @pytest.mark.high\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known issue La app permite espacios vacios BUG\", run=True)\n    @pytest.mark.parametrize(\"invalid_name\", [\n        \"   \",\n        \"\\n\",\n        \"\\n\\n\",\n        \" \\n \",\n        \"\\t\",\n        \" \\t \\n \"\n    ])\n    def test_TC221_tax_category_nombre_espacio_en_blanco(setup_add_tax_category, invalid_name):\n    \n        auth_headers, created_tax_categories = setup_add_tax_category\n        data = generate_tax_category_data()\n        data[\"name\"] = invalid_name\n        url = EndpointTaxCategory.tax_category()\n        response = TaxCategoryCall.create(auth_headers, data)\n        log_request_response(EndpointTaxCategory.tax_category(), response, auth_headers, data)\n        AssertionStatusCode.assert_status_code_422(response)\n        response_json = response.json()\n>       AssertionTaxCategoryErrors.assert_missing_field_error(response_json, \"name\")\n\ntests/configuration/tax_categories/test_HU14_KG_POST_TaxCategory.py:265: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse_json = {'@context': '/api/v2/contexts/ConstraintViolation', '@id': '/api/v2/validation_errors/9ff3fdc4-b214-49db-8718-39c315e33d45', '@type': 'ConstraintViolation', 'description': 'name: Tax category name must be at least 2 characters long.', ...}\nfield_name = 'name'\n\n    @staticmethod\n    def assert_missing_field_error(response_json, field_name):\n        \"\"\"Valida error de campo obligatorio faltante.\"\"\"\n        violations = AssertionTaxCategoryErrors._get_violations(response_json)\n        AssertionTaxCategoryErrors._assert_violation_field(violations, field_name)\n>       assert any(\n            \"please enter\" in v[\"message\"].lower() or \"cannot be blank\" in v[\"message\"].lower()\n            for v in violations\n        ), f\"El mensaje de error no indica que '{field_name}' es obligatorio. Violations: {violations}\"\nE       AssertionError: El mensaje de error no indica que 'name' es obligatorio. Violations: [{'propertyPath': 'name', 'message': 'Tax category name must be at least 2 characters long.', 'code': '9ff3fdc4-b214-49db-8718-39c315e33d45'}]\n\nsrc/assertions/TaxCategory_assertions/tax_category_errors_assertions.py:42: AssertionError"}, "attachments": [{"name": "log", "source": "99ae9d6f-3e96-4de1-b324-7fb4d97c2d91-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "invalid_name", "value": "'\t'"}], "start": 1755404046780, "stop": 1755404047313, "uuid": "4df68466-2887-43e6-a079-6f6d7b60b12f", "historyId": "cf88b56d3c2055b5a46eaf8e3fdf0df4", "testCaseId": "4e6eae6ae73f276ed88c9b6a474ede22", "fullName": "tests.configuration.tax_categories.test_HU14_KG_POST_TaxCategory#test_TC221_tax_category_nombre_espacio_en_blanco", "labels": [{"name": "tag", "value": "negative"}, {"name": "tag", "value": "high"}, {"name": "tag", "value": "smoke"}, {"name": "tag", "value": "functional"}, {"name": "parentSuite", "value": "tests.configuration.tax_categories"}, {"name": "suite", "value": "test_HU14_KG_POST_TaxCategory"}, {"name": "host", "value": "wifiguti.local"}, {"name": "thread", "value": "83309-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.configuration.tax_categories.test_HU14_KG_POST_TaxCategory"}], "titlePath": ["tests", "configuration", "tax_categories", "test_HU14_KG_POST_TaxCategory.py"]}