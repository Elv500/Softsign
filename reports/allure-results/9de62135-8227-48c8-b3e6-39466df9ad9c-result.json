{"name": "test_TC242_get_tax_categories_valida_code_y_name_no_vacios", "status": "skipped", "statusDetails": {"message": "XFAIL known incumple con la validacion esperada del sistema BUG\n\nAssertionError: Las siguientes categorías tienen code o name vacío: [9026, 9027, 9028, 9029, 9049, 9050, 9051, 9052, 9075, 9076, 9077, 9089]\nassert not [9026, 9027, 9028, 9029, 9049, 9050, ...]", "trace": "setup_teardown_view_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU0MDQwMjIsImV4cCI6MTc1NTQwNzYyMiwicm9sZX...xts/TaxCategory', '@id': '/api/v2/admin/tax-categories/TAX-d8499b', '@type': 'TaxCategory', 'code': 'TAX-d8499b', ...})\n\n    @pytest.mark.high\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known incumple con la validacion esperada del sistema BUG\", run=True)\n    def test_TC242_get_tax_categories_valida_code_y_name_no_vacios(setup_teardown_view_tax_category):\n        auth_headers, tax_category1, tax_category2 = setup_teardown_view_tax_category\n        endpoint = EndpointTaxCategory.tax_category()\n        response = SyliusRequest.get(endpoint, auth_headers)\n        log_request_response(endpoint, response, auth_headers)\n        AssertionStatusCode.assert_status_code_200(response)\n    \n        categorias = response.json().get(\"hydra:member\", [])\n        ids_con_errores = []\n        for categoria in categorias:\n            if categoria.get(\"code\", \"\").strip() == \"\" or categoria.get(\"name\", \"\").strip() == \"\":\n                ids_con_errores.append(categoria.get(\"id\", categoria))\n>       assert not ids_con_errores, f\"Las siguientes categorías tienen code o name vacío: {ids_con_errores}\"\nE       AssertionError: Las siguientes categorías tienen code o name vacío: [9026, 9027, 9028, 9029, 9049, 9050, 9051, 9052, 9075, 9076, 9077, 9089]\nE       assert not [9026, 9027, 9028, 9029, 9049, 9050, ...]\n\ntests/configuration/tax_categories/test_HU08_KG_GET_TaxCatergoryList.py:119: AssertionError"}, "attachments": [{"name": "log", "source": "82e19421-e08a-42f5-aaf0-2648aa8601a3-attachment.txt", "type": "text/plain"}], "start": 1755404029688, "stop": 1755404030230, "uuid": "5a7469e6-219d-4263-8b68-789528771602", "historyId": "1bcbd52398b1c8212a9a286391587e11", "testCaseId": "1bcbd52398b1c8212a9a286391587e11", "fullName": "tests.configuration.tax_categories.test_HU08_KG_GET_TaxCatergoryList#test_TC242_get_tax_categories_valida_code_y_name_no_vacios", "labels": [{"name": "tag", "value": "negative"}, {"name": "tag", "value": "functional"}, {"name": "tag", "value": "high"}, {"name": "parentSuite", "value": "tests.configuration.tax_categories"}, {"name": "suite", "value": "test_HU08_KG_GET_TaxCatergoryList"}, {"name": "host", "value": "wifiguti.local"}, {"name": "thread", "value": "83309-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.configuration.tax_categories.test_HU08_KG_GET_TaxCatergoryList"}], "titlePath": ["tests", "configuration", "tax_categories", "test_HU08_KG_GET_TaxCatergoryList.py"]}