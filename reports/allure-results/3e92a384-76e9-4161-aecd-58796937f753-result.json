{"name": "test_TC363_398_No_permitir_campos_vacios[invalid_payload1-None-422]", "status": "skipped", "statusDetails": {"message": "XFAIL known issue La app permite espacios vacios y campos invalidos BUG\n\nAssertionError: Esperado status 422, obtenido 200\nassert 200 == 422\n +  where 200 = <Response [200]>.status_code", "trace": "setup_edit_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU0MDQwMjIsImV4cCI6MTc1NTQwNzYyMiwicm9sZX...xts/TaxCategory', '@id': '/api/v2/admin/tax-categories/TAX-463be4', '@type': 'TaxCategory', 'code': 'TAX-463be4', ...})\ninvalid_payload = {'name': '   '}, expected_error = None, expected_status = 422\n\n    @pytest.mark.high\n    @pytest.mark.negative\n    @pytest.mark.functional\n    @pytest.mark.xfail(reason=\"known issue La app permite espacios vacios y campos invalidos BUG\", run=True)\n    @pytest.mark.parametrize(\"invalid_payload,expected_error,expected_status\", [\n        ({\"name\": \"\"}, \"Please enter tax category name.\", 422),\n        ({\"name\": \"   \"}, None, 422), #en este caso deberia de fallar pero manda como bien con 200\n        ({\"name\": None}, \"The type of the \\\"name\\\" attribute must be \\\"string\\\"\", 400),\n        ({\"name\": \"VÃ¡lido\", \"description\": \"\"}, None, 200),\n        ({\"name\": \"+\"}, \"solo dato invalido.\", 400) #no ingresar con semantica incorrecta\n    ])\n    def test_TC363_398_No_permitir_campos_vacios(setup_edit_tax_category, invalid_payload, expected_error, expected_status):\n        headers, tax_category_data = setup_edit_tax_category\n        url = EndpointTaxCategory.code(tax_category_data[\"code\"])\n        initial_response = SyliusRequest.get(url, headers)\n        initial_data = initial_response.json()\n        log_request_response(url, initial_response, headers)\n        response = SyliusRequest.put(url, headers, invalid_payload)\n        log_request_response(url, response, headers, invalid_payload)\n>       assert response.status_code == expected_status, f\"Esperado status {expected_status}, obtenido {response.status_code}\"\nE       AssertionError: Esperado status 422, obtenido 200\nE       assert 200 == 422\nE        +  where 200 = <Response [200]>.status_code\n\ntests/configuration/tax_categories/test_HU29_KG_PUT_TaxCategory.py:79: AssertionError"}, "attachments": [{"name": "log", "source": "6d4d5197-701f-4628-ae9c-f19fe0c36d3a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "invalid_payload", "value": "{'name': '   '}"}, {"name": "expected_error", "value": "None"}, {"name": "expected_status", "value": "422"}], "start": 1755404075816, "stop": 1755404076884, "uuid": "e0c632f8-40c6-4161-86b6-e09a2fa3bb59", "historyId": "186324c7c5f92d13cdc69a4fac09471a", "testCaseId": "701e4783f8d3e8b8010a7bade61fb298", "fullName": "tests.configuration.tax_categories.test_HU29_KG_PUT_TaxCategory#test_TC363_398_No_permitir_campos_vacios", "labels": [{"name": "tag", "value": "functional"}, {"name": "tag", "value": "negative"}, {"name": "tag", "value": "high"}, {"name": "parentSuite", "value": "tests.configuration.tax_categories"}, {"name": "suite", "value": "test_HU29_KG_PUT_TaxCategory"}, {"name": "host", "value": "wifiguti.local"}, {"name": "thread", "value": "83309-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.configuration.tax_categories.test_HU29_KG_PUT_TaxCategory"}], "titlePath": ["tests", "configuration", "tax_categories", "test_HU29_KG_PUT_TaxCategory.py"]}