{"name": "test_TC221_tax_category_nombre_espacio_en_blanco[ \\t \\n ]", "status": "skipped", "statusDetails": {"message": "XFAIL known issue La app permite espacios vacios BUG\n\nAssertionError", "trace": "setup_add_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU0MDQwMjIsImV4cCI6MTc1NTQwNzYyMiwicm9sZX...W6nVJFQCFdeI9hboZjhwfeYkneLheQdFe9GWuEDeXCaWakEoNRpe7nxeFJDt8s4OlXqAEjnDTAvypDnAIfn1m0fe-IZEZHq34BYYlPDri7yX76yc'}, [])\ninvalid_name = ' \\t \\n '\n\n    @pytest.mark.functional\n    @pytest.mark.smoke\n    @pytest.mark.high\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known issue La app permite espacios vacios BUG\", run=True)\n    @pytest.mark.parametrize(\"invalid_name\", [\n        \"   \",\n        \"\\n\",\n        \"\\n\\n\",\n        \" \\n \",\n        \"\\t\",\n        \" \\t \\n \"\n    ])\n    def test_TC221_tax_category_nombre_espacio_en_blanco(setup_add_tax_category, invalid_name):\n    \n        auth_headers, created_tax_categories = setup_add_tax_category\n        data = generate_tax_category_data()\n        data[\"name\"] = invalid_name\n        url = EndpointTaxCategory.tax_category()\n        response = TaxCategoryCall.create(auth_headers, data)\n        log_request_response(EndpointTaxCategory.tax_category(), response, auth_headers, data)\n>       AssertionStatusCode.assert_status_code_422(response)\n\ntests/configuration/tax_categories/test_HU14_KG_POST_TaxCategory.py:263: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nresponse = <Response [201]>\n\n    @staticmethod\n    def assert_status_code_422(response):\n>       assert response.status_code == 422\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:59: AssertionError"}, "attachments": [{"name": "log", "source": "39236993-1d4f-46bf-a8a6-a4da866c3310-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "invalid_name", "value": "' \t \n '"}], "start": 1755404047345, "stop": 1755404047886, "uuid": "ca799756-2f3a-4508-9e5e-a3f876f4d4ba", "historyId": "fdf56d1af4dd7f4edebbe8e52885329d", "testCaseId": "4e6eae6ae73f276ed88c9b6a474ede22", "fullName": "tests.configuration.tax_categories.test_HU14_KG_POST_TaxCategory#test_TC221_tax_category_nombre_espacio_en_blanco", "labels": [{"name": "tag", "value": "negative"}, {"name": "tag", "value": "high"}, {"name": "tag", "value": "smoke"}, {"name": "tag", "value": "functional"}, {"name": "parentSuite", "value": "tests.configuration.tax_categories"}, {"name": "suite", "value": "test_HU14_KG_POST_TaxCategory"}, {"name": "host", "value": "wifiguti.local"}, {"name": "thread", "value": "83309-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.configuration.tax_categories.test_HU14_KG_POST_TaxCategory"}], "titlePath": ["tests", "configuration", "tax_categories", "test_HU14_KG_POST_TaxCategory.py"]}