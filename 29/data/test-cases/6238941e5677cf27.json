{"uid":"6238941e5677cf27","name":"test_TC221_tax_category_nombre_espacio_en_blanco[\\n]","fullName":"tests.configuration.tax_categories.test_HU14_KG_POST_TaxCategory#test_TC221_tax_category_nombre_espacio_en_blanco","historyId":"f696e1c719277b0f881db6642775d60a","time":{"start":1755291524778,"stop":1755291524941,"duration":163},"status":"skipped","statusMessage":"XFAIL known issue La app permite espacios vacios BUG\n\nAssertionError: El mensaje de error no indica que 'name' es obligatorio. Violations: [{'propertyPath': 'name', 'message': 'Tax category name must be at least 2 characters long.', 'code': '9ff3fdc4-b214-49db-8718-39c315e33d45'}]","statusTrace":"setup_add_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUyOTE0NDYsImV4cCI6MTc1NTI5NTA0Niwicm9sZX...jit-qQNRnbQgM67nh8cvLw1x6z4i9owBHa3GZ4kAYhysChwg7su4uaak_fu-MrGx0nVrsRgW6q7rqtcIBoUJaaoB364I4BlG73qzcFyXWO9wXpnU'}, [])\ninvalid_name = '\\n'\n\n    @pytest.mark.functional\n    @pytest.mark.smoke\n    @pytest.mark.regression\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known issue La app permite espacios vacios BUG\", run=True)\n    @pytest.mark.parametrize(\"invalid_name\", [\n        \"   \",\n        \"\\n\",\n        \"\\n\\n\",\n        \" \\n \",\n        \"\\t\",\n        \" \\t \\n \"\n    ])\n    def test_TC221_tax_category_nombre_espacio_en_blanco(setup_add_tax_category, invalid_name):\n    \n        auth_headers, created_tax_categories = setup_add_tax_category\n        data = generate_tax_category_data()\n        data[\"name\"] = invalid_name\n        url = EndpointTaxCategory.tax_category()\n        response = TaxCategoryCall.create(auth_headers, data)\n        log_request_response(EndpointTaxCategory.tax_category(), response, auth_headers, data)\n        AssertionStatusCode.assert_status_code_422(response)\n        response_json = response.json()\n>       AssertionTaxCategoryErrors.assert_missing_field_error(response_json, \"name\")\n\ntests/configuration/tax_categories/test_HU14_KG_POST_TaxCategory.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse_json = {'@context': '/api/v2/contexts/ConstraintViolation', '@id': '/api/v2/validation_errors/9ff3fdc4-b214-49db-8718-39c315e33d45', '@type': 'ConstraintViolation', 'description': 'name: Tax category name must be at least 2 characters long.', ...}\nfield_name = 'name'\n\n    @staticmethod\n    def assert_missing_field_error(response_json, field_name):\n        \"\"\"Valida error de campo obligatorio faltante.\"\"\"\n        violations = AssertionTaxCategoryErrors._get_violations(response_json)\n        AssertionTaxCategoryErrors._assert_violation_field(violations, field_name)\n>       assert any(\n            \"please enter\" in v[\"message\"].lower() or \"cannot be blank\" in v[\"message\"].lower()\n            for v in violations\n        ), f\"El mensaje de error no indica que '{field_name}' es obligatorio. Violations: {violations}\"\nE       AssertionError: El mensaje de error no indica que 'name' es obligatorio. Violations: [{'propertyPath': 'name', 'message': 'Tax category name must be at least 2 characters long.', 'code': '9ff3fdc4-b214-49db-8718-39c315e33d45'}]\n\nsrc/assertions/TaxCategory_assertions/tax_category_errors_assertions.py:42: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291445879,"stop":1755291445880,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755291445880,"stop":1755291446470,"duration":590},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_add_tax_category","time":{"start":1755291524777,"stop":1755291524777,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL known issue La app permite espacios vacios BUG\n\nAssertionError: El mensaje de error no indica que 'name' es obligatorio. Violations: [{'propertyPath': 'name', 'message': 'Tax category name must be at least 2 characters long.', 'code': '9ff3fdc4-b214-49db-8718-39c315e33d45'}]","statusTrace":"setup_add_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUyOTE0NDYsImV4cCI6MTc1NTI5NTA0Niwicm9sZX...jit-qQNRnbQgM67nh8cvLw1x6z4i9owBHa3GZ4kAYhysChwg7su4uaak_fu-MrGx0nVrsRgW6q7rqtcIBoUJaaoB364I4BlG73qzcFyXWO9wXpnU'}, [])\ninvalid_name = '\\n'\n\n    @pytest.mark.functional\n    @pytest.mark.smoke\n    @pytest.mark.regression\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known issue La app permite espacios vacios BUG\", run=True)\n    @pytest.mark.parametrize(\"invalid_name\", [\n        \"   \",\n        \"\\n\",\n        \"\\n\\n\",\n        \" \\n \",\n        \"\\t\",\n        \" \\t \\n \"\n    ])\n    def test_TC221_tax_category_nombre_espacio_en_blanco(setup_add_tax_category, invalid_name):\n    \n        auth_headers, created_tax_categories = setup_add_tax_category\n        data = generate_tax_category_data()\n        data[\"name\"] = invalid_name\n        url = EndpointTaxCategory.tax_category()\n        response = TaxCategoryCall.create(auth_headers, data)\n        log_request_response(EndpointTaxCategory.tax_category(), response, auth_headers, data)\n        AssertionStatusCode.assert_status_code_422(response)\n        response_json = response.json()\n>       AssertionTaxCategoryErrors.assert_missing_field_error(response_json, \"name\")\n\ntests/configuration/tax_categories/test_HU14_KG_POST_TaxCategory.py:257: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse_json = {'@context': '/api/v2/contexts/ConstraintViolation', '@id': '/api/v2/validation_errors/9ff3fdc4-b214-49db-8718-39c315e33d45', '@type': 'ConstraintViolation', 'description': 'name: Tax category name must be at least 2 characters long.', ...}\nfield_name = 'name'\n\n    @staticmethod\n    def assert_missing_field_error(response_json, field_name):\n        \"\"\"Valida error de campo obligatorio faltante.\"\"\"\n        violations = AssertionTaxCategoryErrors._get_violations(response_json)\n        AssertionTaxCategoryErrors._assert_violation_field(violations, field_name)\n>       assert any(\n            \"please enter\" in v[\"message\"].lower() or \"cannot be blank\" in v[\"message\"].lower()\n            for v in violations\n        ), f\"El mensaje de error no indica que '{field_name}' es obligatorio. Violations: {violations}\"\nE       AssertionError: El mensaje de error no indica que 'name' es obligatorio. Violations: [{'propertyPath': 'name', 'message': 'Tax category name must be at least 2 characters long.', 'code': '9ff3fdc4-b214-49db-8718-39c315e33d45'}]\n\nsrc/assertions/TaxCategory_assertions/tax_category_errors_assertions.py:42: AssertionError","steps":[],"attachments":[{"uid":"958548419c7406fc","name":"log","source":"958548419c7406fc.txt","type":"text/plain","size":2370}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup_add_tax_category::0","time":{"start":1755291524948,"stop":1755291524948,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"negative"},{"name":"tag","value":"regression"},{"name":"tag","value":"smoke"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.configuration.tax_categories"},{"name":"suite","value":"test_HU14_KG_POST_TaxCategory"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2408-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.configuration.tax_categories.test_HU14_KG_POST_TaxCategory"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"invalid_name","value":"'\n'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":4,"passed":0,"unknown":0,"total":4},"items":[{"uid":"1f64072e1567782c","reportUrl":"https://Elv500.github.io/Softsign/28//#testresult/1f64072e1567782c","status":"skipped","statusDetails":"XFAIL known issue La app permite espacios vacios BUG\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 3 column 1 (char 2)","time":{"start":1755291273727,"stop":1755291273727,"duration":0}},{"uid":"e04d00de61de543f","reportUrl":"https://Elv500.github.io/Softsign/27//#testresult/e04d00de61de543f","status":"skipped","statusDetails":"XFAIL known issue La app permite espacios vacios BUG\n\nAssertionError: El mensaje de error no indica que 'name' es obligatorio. Violations: [{'propertyPath': 'name', 'message': 'Tax category name must be at least 2 characters long.', 'code': '9ff3fdc4-b214-49db-8718-39c315e33d45'}]","time":{"start":1755149144552,"stop":1755149144794,"duration":242}},{"uid":"4ad56ea7d1854863","reportUrl":"https://Elv500.github.io/Softsign/26//#testresult/4ad56ea7d1854863","status":"skipped","statusDetails":"XFAIL known issue La app permite espacios vacios BUG\n\nAssertionError: El mensaje de error no indica que 'name' es obligatorio. Violations: [{'propertyPath': 'name', 'message': 'Tax category name must be at least 2 characters long.', 'code': '9ff3fdc4-b214-49db-8718-39c315e33d45'}]","time":{"start":1755146227001,"stop":1755146227228,"duration":227}}]},"tags":["negative","functional","regression","smoke"]},"source":"6238941e5677cf27.json","parameterValues":["'\n'"]}