{"uid":"c53d1714da5e5ecd","name":"test_TC242_get_tax_categories_valida_code_y_name_no_vacios","fullName":"tests.configuration.tax_categories.test_HU08_KG_GET_TaxCatergoryList#test_TC242_get_tax_categories_valida_code_y_name_no_vacios","historyId":"1bcbd52398b1c8212a9a286391587e11","time":{"start":1755291519724,"stop":1755291519906,"duration":182},"status":"skipped","statusMessage":"XFAIL known incumple con la validacion esperada del sistema BUG\n\nAssertionError: Las siguientes categorías tienen code o name vacío: [8703, 8704, 8705, 8706]\nassert not [8703, 8704, 8705, 8706]","statusTrace":"setup_teardown_view_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUyOTE0NDYsImV4cCI6MTc1NTI5NTA0Niwicm9sZX...xts/TaxCategory', '@id': '/api/v2/admin/tax-categories/TAX-d7978d', '@type': 'TaxCategory', 'code': 'TAX-d7978d', ...})\n\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known incumple con la validacion esperada del sistema BUG\", run=True)\n    def test_TC242_get_tax_categories_valida_code_y_name_no_vacios(setup_teardown_view_tax_category):\n        auth_headers, tax_category1, tax_category2 = setup_teardown_view_tax_category\n        endpoint = EndpointTaxCategory.tax_category()\n        response = SyliusRequest.get(endpoint, auth_headers)\n        log_request_response(endpoint, response, auth_headers)\n        AssertionStatusCode.assert_status_code_200(response)\n    \n        categorias = response.json().get(\"hydra:member\", [])\n        ids_con_errores = []\n        for categoria in categorias:\n            if categoria.get(\"code\", \"\").strip() == \"\" or categoria.get(\"name\", \"\").strip() == \"\":\n                ids_con_errores.append(categoria.get(\"id\", categoria))\n>       assert not ids_con_errores, f\"Las siguientes categorías tienen code o name vacío: {ids_con_errores}\"\nE       AssertionError: Las siguientes categorías tienen code o name vacío: [8703, 8704, 8705, 8706]\nE       assert not [8703, 8704, 8705, 8706]\n\ntests/configuration/tax_categories/test_HU08_KG_GET_TaxCatergoryList.py:113: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755291445879,"stop":1755291445880,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755291445880,"stop":1755291446470,"duration":590},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_teardown_view_tax_category","time":{"start":1755291518019,"stop":1755291518566,"duration":547},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL known incumple con la validacion esperada del sistema BUG\n\nAssertionError: Las siguientes categorías tienen code o name vacío: [8703, 8704, 8705, 8706]\nassert not [8703, 8704, 8705, 8706]","statusTrace":"setup_teardown_view_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUyOTE0NDYsImV4cCI6MTc1NTI5NTA0Niwicm9sZX...xts/TaxCategory', '@id': '/api/v2/admin/tax-categories/TAX-d7978d', '@type': 'TaxCategory', 'code': 'TAX-d7978d', ...})\n\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known incumple con la validacion esperada del sistema BUG\", run=True)\n    def test_TC242_get_tax_categories_valida_code_y_name_no_vacios(setup_teardown_view_tax_category):\n        auth_headers, tax_category1, tax_category2 = setup_teardown_view_tax_category\n        endpoint = EndpointTaxCategory.tax_category()\n        response = SyliusRequest.get(endpoint, auth_headers)\n        log_request_response(endpoint, response, auth_headers)\n        AssertionStatusCode.assert_status_code_200(response)\n    \n        categorias = response.json().get(\"hydra:member\", [])\n        ids_con_errores = []\n        for categoria in categorias:\n            if categoria.get(\"code\", \"\").strip() == \"\" or categoria.get(\"name\", \"\").strip() == \"\":\n                ids_con_errores.append(categoria.get(\"id\", categoria))\n>       assert not ids_con_errores, f\"Las siguientes categorías tienen code o name vacío: {ids_con_errores}\"\nE       AssertionError: Las siguientes categorías tienen code o name vacío: [8703, 8704, 8705, 8706]\nE       assert not [8703, 8704, 8705, 8706]\n\ntests/configuration/tax_categories/test_HU08_KG_GET_TaxCatergoryList.py:113: AssertionError","steps":[],"attachments":[{"uid":"bbbd9cd8a47f4659","name":"log","source":"bbbd9cd8a47f4659.txt","type":"text/plain","size":6120}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup_teardown_view_tax_category::0","time":{"start":1755291520731,"stop":1755291521093,"duration":362},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"negative"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.configuration.tax_categories"},{"name":"suite","value":"test_HU08_KG_GET_TaxCatergoryList"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2408-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.configuration.tax_categories.test_HU08_KG_GET_TaxCatergoryList"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":2,"passed":0,"unknown":0,"total":2},"items":[{"uid":"693d30e2815f3ed6","reportUrl":"https://Elv500.github.io/Softsign/28//#testresult/693d30e2815f3ed6","status":"skipped","statusDetails":"XFAIL known incumple con la validacion esperada del sistema BUG\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 3 column 1 (char 2)","time":{"start":1755291272825,"stop":1755291272825,"duration":0}}]},"tags":["negative","functional"]},"source":"c53d1714da5e5ecd.json","parameterValues":[]}