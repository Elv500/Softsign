{"uid":"18888a14b6c12d48","name":"test_210_219_pagina_e_items_invalidas[1-]","fullName":"tests.catalog.inventory.test_HU04_EA_GET_InventoryList#test_210_219_pagina_e_items_invalidas","historyId":"af5885f0ab06ba525229ed9e23d4b4a9","time":{"start":1755291483051,"stop":1755291483237,"duration":186},"status":"skipped","statusMessage":"XFAIL BUG219: El param itemsPerPage puede ser vacio rompiendo la URL\n\nAssertionError","statusTrace":"setup_teardown_view_inventory = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUyOTE0NDYsImV4cCI6MTc1NTI5NTA0Niwicm9sZX...sources/ball-eye-sister', '@type': 'InventorySource', 'address': '/api/v2/admin/inventory-source-addresses/3747', ...})\npage = 1, itemsPerPage = ''\n\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.regression\n    @pytest.mark.security\n    @pytest.mark.parametrize(\"page, itemsPerPage\", [\n        (0, 1),\n        (-1, 1),\n        pytest.param(1.5, 1, marks=pytest.mark.xfail(reason=\"BUG212: El parámetro page acepta decimales y rompe la URL\", run=True)),\n        (\"uno\", 1),\n        ('', 1),\n        (1, -1),\n        pytest.param(1, 1.5, marks=pytest.mark.xfail(reason=\"BUG217: El param itemsPerPage puede ser decimal rompiendo la URL\", run=True)),\n        pytest.param(1, \"uno\", marks=pytest.mark.xfail(reason=\"BUG218: El param itemsPerPage puede ser string rompiendo la URL\", run=True)),\n        pytest.param(1, '', marks=pytest.mark.xfail(reason=\"BUG219: El param itemsPerPage puede ser vacio rompiendo la URL\", run=True))\n    ])\n    def test_210_219_pagina_e_items_invalidas(setup_teardown_view_inventory, page, itemsPerPage):\n        headers, _, _ = setup_teardown_view_inventory\n        params = {\"page\": page, \"itemsPerPage\": itemsPerPage}\n        url = EndpointInventory.inventory_with_params(**params)\n        response = SyliusRequest.get(url, headers)\n        log_request_response(url, response, headers)\n>       AssertionStatusCode.assert_status_code_400(response)\n\ntests/catalog/inventory/test_HU04_EA_GET_InventoryList.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n>       assert response.status_code == 400\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:23: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"_session_faker","time":{"start":1755291445879,"stop":1755291445880,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755291445880,"stop":1755291446470,"duration":590},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_teardown_view_inventory","time":{"start":1755291479145,"stop":1755291479513,"duration":368},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL BUG219: El param itemsPerPage puede ser vacio rompiendo la URL\n\nAssertionError","statusTrace":"setup_teardown_view_inventory = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUyOTE0NDYsImV4cCI6MTc1NTI5NTA0Niwicm9sZX...sources/ball-eye-sister', '@type': 'InventorySource', 'address': '/api/v2/admin/inventory-source-addresses/3747', ...})\npage = 1, itemsPerPage = ''\n\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.regression\n    @pytest.mark.security\n    @pytest.mark.parametrize(\"page, itemsPerPage\", [\n        (0, 1),\n        (-1, 1),\n        pytest.param(1.5, 1, marks=pytest.mark.xfail(reason=\"BUG212: El parámetro page acepta decimales y rompe la URL\", run=True)),\n        (\"uno\", 1),\n        ('', 1),\n        (1, -1),\n        pytest.param(1, 1.5, marks=pytest.mark.xfail(reason=\"BUG217: El param itemsPerPage puede ser decimal rompiendo la URL\", run=True)),\n        pytest.param(1, \"uno\", marks=pytest.mark.xfail(reason=\"BUG218: El param itemsPerPage puede ser string rompiendo la URL\", run=True)),\n        pytest.param(1, '', marks=pytest.mark.xfail(reason=\"BUG219: El param itemsPerPage puede ser vacio rompiendo la URL\", run=True))\n    ])\n    def test_210_219_pagina_e_items_invalidas(setup_teardown_view_inventory, page, itemsPerPage):\n        headers, _, _ = setup_teardown_view_inventory\n        params = {\"page\": page, \"itemsPerPage\": itemsPerPage}\n        url = EndpointInventory.inventory_with_params(**params)\n        response = SyliusRequest.get(url, headers)\n        log_request_response(url, response, headers)\n>       AssertionStatusCode.assert_status_code_400(response)\n\ntests/catalog/inventory/test_HU04_EA_GET_InventoryList.py:151: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n>       assert response.status_code == 400\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:23: AssertionError","steps":[],"attachments":[{"uid":"a88be8028486262d","name":"log","source":"a88be8028486262d.txt","type":"text/plain","size":2195}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup_teardown_view_inventory::0","time":{"start":1755291483242,"stop":1755291483614,"duration":372},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"security"},{"name":"tag","value":"regression"},{"name":"tag","value":"negative"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.catalog.inventory"},{"name":"suite","value":"test_HU04_EA_GET_InventoryList"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2408-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.inventory.test_HU04_EA_GET_InventoryList"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"itemsPerPage","value":"''"},{"name":"page","value":"1"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"d0cd306fc3eddb02","status":"passed","time":{"start":1755291482349,"stop":1755291482535,"duration":186}}],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":3,"passed":0,"unknown":0,"total":3},"items":[{"uid":"e5717819b56fa8a4","reportUrl":"https://Elv500.github.io/Softsign/28//#testresult/e5717819b56fa8a4","status":"skipped","statusDetails":"XFAIL BUG219: El param itemsPerPage puede ser vacio rompiendo la URL\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 3 column 1 (char 2)","time":{"start":1755291267480,"stop":1755291267480,"duration":0}},{"uid":"7c5fe173e659dfe2","reportUrl":"https://Elv500.github.io/Softsign/27//#testresult/7c5fe173e659dfe2","status":"skipped","statusDetails":"XFAIL BUG219: El param itemsPerPage puede ser vacio rompiendo la URL\n\nAssertionError","time":{"start":1755149097508,"stop":1755149097750,"duration":242}}]},"tags":["security","negative","functional","regression"]},"source":"18888a14b6c12d48.json","parameterValues":["''","1"]}