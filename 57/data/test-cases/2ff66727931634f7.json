{"uid":"2ff66727931634f7","name":"test_TC242_get_tax_categories_valida_code_y_name_no_vacios","fullName":"tests.configuration.tax_categories.test_HU08_KG_GET_TaxCatergoryList#test_TC242_get_tax_categories_valida_code_y_name_no_vacios","historyId":"1bcbd52398b1c8212a9a286391587e11","time":{"start":1755544279735,"stop":1755544280540,"duration":805},"status":"skipped","statusMessage":"XFAIL known incumple con la validacion esperada del sistema BUG\n\nAssertionError: Las siguientes categorías tienen code o name vacío: [9607, 9608, 9609, 9610]\nassert not [9607, 9608, 9609, 9610]","statusTrace":"setup_teardown_view_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU1NDM5NTUsImV4cCI6MTc1NTU0NzU1NSwicm9sZX...xts/TaxCategory', '@id': '/api/v2/admin/tax-categories/TAX-bb1de1', '@type': 'TaxCategory', 'code': 'TAX-bb1de1', ...})\n\n    @pytest.mark.high\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known incumple con la validacion esperada del sistema BUG\", run=True)\n    def test_TC242_get_tax_categories_valida_code_y_name_no_vacios(setup_teardown_view_tax_category):\n        auth_headers, tax_category1, tax_category2 = setup_teardown_view_tax_category\n        endpoint = EndpointTaxCategory.tax_category()\n        response = SyliusRequest.get(endpoint, auth_headers)\n        log_request_response(endpoint, response, auth_headers)\n        AssertionStatusCode.assert_status_code_200(response)\n    \n        categorias = response.json().get(\"hydra:member\", [])\n        ids_con_errores = []\n        for categoria in categorias:\n            if categoria.get(\"code\", \"\").strip() == \"\" or categoria.get(\"name\", \"\").strip() == \"\":\n                ids_con_errores.append(categoria.get(\"id\", categoria))\n>       assert not ids_con_errores, f\"Las siguientes categorías tienen code o name vacío: {ids_con_errores}\"\nE       AssertionError: Las siguientes categorías tienen code o name vacío: [9607, 9608, 9609, 9610]\nE       assert not [9607, 9608, 9609, 9610]\n\ntests/configuration/tax_categories/test_HU08_KG_GET_TaxCatergoryList.py:119: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755543954615,"stop":1755543954615,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755543954616,"stop":1755543956074,"duration":1458},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_teardown_view_tax_category","time":{"start":1755544272863,"stop":1755544274488,"duration":1625},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL known incumple con la validacion esperada del sistema BUG\n\nAssertionError: Las siguientes categorías tienen code o name vacío: [9607, 9608, 9609, 9610]\nassert not [9607, 9608, 9609, 9610]","statusTrace":"setup_teardown_view_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU1NDM5NTUsImV4cCI6MTc1NTU0NzU1NSwicm9sZX...xts/TaxCategory', '@id': '/api/v2/admin/tax-categories/TAX-bb1de1', '@type': 'TaxCategory', 'code': 'TAX-bb1de1', ...})\n\n    @pytest.mark.high\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known incumple con la validacion esperada del sistema BUG\", run=True)\n    def test_TC242_get_tax_categories_valida_code_y_name_no_vacios(setup_teardown_view_tax_category):\n        auth_headers, tax_category1, tax_category2 = setup_teardown_view_tax_category\n        endpoint = EndpointTaxCategory.tax_category()\n        response = SyliusRequest.get(endpoint, auth_headers)\n        log_request_response(endpoint, response, auth_headers)\n        AssertionStatusCode.assert_status_code_200(response)\n    \n        categorias = response.json().get(\"hydra:member\", [])\n        ids_con_errores = []\n        for categoria in categorias:\n            if categoria.get(\"code\", \"\").strip() == \"\" or categoria.get(\"name\", \"\").strip() == \"\":\n                ids_con_errores.append(categoria.get(\"id\", categoria))\n>       assert not ids_con_errores, f\"Las siguientes categorías tienen code o name vacío: {ids_con_errores}\"\nE       AssertionError: Las siguientes categorías tienen code o name vacío: [9607, 9608, 9609, 9610]\nE       assert not [9607, 9608, 9609, 9610]\n\ntests/configuration/tax_categories/test_HU08_KG_GET_TaxCatergoryList.py:119: AssertionError","steps":[],"attachments":[{"uid":"7989aa286ffc4484","name":"log","source":"7989aa286ffc4484.txt","type":"text/plain","size":6071}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup_teardown_view_tax_category::0","time":{"start":1755544283303,"stop":1755544284890,"duration":1587},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"negative"},{"name":"tag","value":"functional"},{"name":"tag","value":"high"},{"name":"parentSuite","value":"tests.configuration.tax_categories"},{"name":"suite","value":"test_HU08_KG_GET_TaxCatergoryList"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.configuration.tax_categories.test_HU08_KG_GET_TaxCatergoryList"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["negative","functional","high"]},"source":"2ff66727931634f7.json","parameterValues":[]}