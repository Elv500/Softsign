{"uid":"285dce62ddf7e9ed","name":"test_TC255_crear_inventory_con_prioridad_negativa","fullName":"tests.catalog.inventory.test_HU05_EA_POST_Inventory#test_TC255_crear_inventory_con_prioridad_negativa","historyId":"c3e5611d3eb981873477597588b52fac","time":{"start":1755544117142,"stop":1755544117976,"duration":834},"status":"skipped","statusMessage":"XFAIL BUG255: Permite crear inventario con prioridad negativa\n\nAssertionError","statusTrace":"setup_add_inventory = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU1NDM5NTUsImV4cCI6MTc1NTU0NzU1NSwicm9sZX...sources/ready-actually', '@type': 'InventorySource', 'address': '/api/v2/admin/inventory-source-addresses/4545', ...}])\n\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.medium\n    @pytest.mark.xfail(reason=\"BUG255: Permite crear inventario con prioridad negativa\", run=True)\n    def test_TC255_crear_inventory_con_prioridad_negativa(setup_add_inventory):\n        headers, created_inventories = setup_add_inventory\n        payload = generate_inventory_source_data()\n        payload[\"priority\"] = -5\n        url = EndpointInventory.inventory()\n        response = SyliusRequest.post(url, headers, payload)\n        log_request_response(url, response, headers, payload)\n        response_json = response.json()\n        created_inventories.append(response_json)\n>       AssertionStatusCode.assert_status_code_422(response)\n\ntests/catalog/inventory/test_HU05_EA_POST_Inventory.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [201]>\n\n    @staticmethod\n    def assert_status_code_422(response):\n>       assert response.status_code == 422\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:59: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755543954615,"stop":1755543954615,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755543954616,"stop":1755543956074,"duration":1458},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_add_inventory","time":{"start":1755544117142,"stop":1755544117142,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL BUG255: Permite crear inventario con prioridad negativa\n\nAssertionError","statusTrace":"setup_add_inventory = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU1NDM5NTUsImV4cCI6MTc1NTU0NzU1NSwicm9sZX...sources/ready-actually', '@type': 'InventorySource', 'address': '/api/v2/admin/inventory-source-addresses/4545', ...}])\n\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.medium\n    @pytest.mark.xfail(reason=\"BUG255: Permite crear inventario con prioridad negativa\", run=True)\n    def test_TC255_crear_inventory_con_prioridad_negativa(setup_add_inventory):\n        headers, created_inventories = setup_add_inventory\n        payload = generate_inventory_source_data()\n        payload[\"priority\"] = -5\n        url = EndpointInventory.inventory()\n        response = SyliusRequest.post(url, headers, payload)\n        log_request_response(url, response, headers, payload)\n        response_json = response.json()\n        created_inventories.append(response_json)\n>       AssertionStatusCode.assert_status_code_422(response)\n\ntests/catalog/inventory/test_HU05_EA_POST_Inventory.py:173: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [201]>\n\n    @staticmethod\n    def assert_status_code_422(response):\n>       assert response.status_code == 422\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:59: AssertionError","steps":[],"attachments":[{"uid":"37ebe77ebd0e2af1","name":"log","source":"37ebe77ebd0e2af1.txt","type":"text/plain","size":2323}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup_add_inventory::0","time":{"start":1755544117985,"stop":1755544118785,"duration":800},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"medium"},{"name":"tag","value":"negative"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.catalog.inventory"},{"name":"suite","value":"test_HU05_EA_POST_Inventory"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2416-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.inventory.test_HU05_EA_POST_Inventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["negative","functional","medium"]},"source":"285dce62ddf7e9ed.json","parameterValues":[]}