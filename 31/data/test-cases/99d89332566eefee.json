{"uid":"99d89332566eefee","name":"test_tc323_Verificar_error_al_actualizar_opción_con_position_mayor_a_9999999999","fullName":"tests.catalog.options.test_HU25_ES_PUT_ProductOption#test_tc323_Verificar_error_al_actualizar_opción_con_position_mayor_a_9999999999","historyId":"5d22b515f6797cf62c318fc6f66fd710","time":{"start":1755294163824,"stop":1755294164220,"duration":396},"status":"skipped","statusMessage":"XFAIL Known issue BUG: Normalización inconsistente al actualizar 'position' con valores >999,999,999 - Sin validación y comportamiento impredecible\n\nAssertionError","statusTrace":"setup_options_cleanup = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUyOTQwOTgsImV4cCI6MTc1NTI5NzY5OCwicm9sZX...-ddBedMgJ0DxsBgBhaoS7Ssd51Ly4YN4'}, <function setup_options_cleanup.<locals>.add_option_for_cleanup at 0x7f24083d3a60>)\n\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.boundary\n    @pytest.mark.xfail(reason=\"Known issue BUG: Normalización inconsistente al actualizar 'position' con valores >999,999,999 - Sin validación y comportamiento impredecible\", run=True)\n    def test_tc323_Verificar_error_al_actualizar_opción_con_position_mayor_a_9999999999(setup_options_cleanup):\n        headers, _ = setup_options_cleanup\n        payload = generate_options_source_data()\n        response = SyliusRequest.post(EndpointOptions.options(), headers, payload)\n        AssertionStatusCode.assert_status_code_201(response)\n        code = response.json()[\"code\"]\n        en_us_translation = response.json()[\"translations\"].get(\"en_US\", {})\n        translation_id = en_us_translation.get(\"@id\")\n        updated_payload = generate_updated_options_payload(code, translation_id)\n        updated_payload[\"position\"] = fake.random_int(min=10000000000, max=100000000000)\n        response = SyliusRequest().put_with_custom_headers(EndpointOptions.code(code), headers, updated_payload)\n        log_request_response(EndpointOptions.code(code), response, headers, updated_payload)\n>       AssertionStatusCode.assert_status_code_400(response)\n\ntests/catalog/options/test_HU25_ES_PUT_ProductOption.py:176: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n>       assert response.status_code == 400\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:23: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755294098314,"stop":1755294098315,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755294098315,"stop":1755294098830,"duration":515},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_options_cleanup","time":{"start":1755294163824,"stop":1755294163824,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL Known issue BUG: Normalización inconsistente al actualizar 'position' con valores >999,999,999 - Sin validación y comportamiento impredecible\n\nAssertionError","statusTrace":"setup_options_cleanup = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUyOTQwOTgsImV4cCI6MTc1NTI5NzY5OCwicm9sZX...-ddBedMgJ0DxsBgBhaoS7Ssd51Ly4YN4'}, <function setup_options_cleanup.<locals>.add_option_for_cleanup at 0x7f24083d3a60>)\n\n    @pytest.mark.functional\n    @pytest.mark.negative\n    @pytest.mark.boundary\n    @pytest.mark.xfail(reason=\"Known issue BUG: Normalización inconsistente al actualizar 'position' con valores >999,999,999 - Sin validación y comportamiento impredecible\", run=True)\n    def test_tc323_Verificar_error_al_actualizar_opción_con_position_mayor_a_9999999999(setup_options_cleanup):\n        headers, _ = setup_options_cleanup\n        payload = generate_options_source_data()\n        response = SyliusRequest.post(EndpointOptions.options(), headers, payload)\n        AssertionStatusCode.assert_status_code_201(response)\n        code = response.json()[\"code\"]\n        en_us_translation = response.json()[\"translations\"].get(\"en_US\", {})\n        translation_id = en_us_translation.get(\"@id\")\n        updated_payload = generate_updated_options_payload(code, translation_id)\n        updated_payload[\"position\"] = fake.random_int(min=10000000000, max=100000000000)\n        response = SyliusRequest().put_with_custom_headers(EndpointOptions.code(code), headers, updated_payload)\n        log_request_response(EndpointOptions.code(code), response, headers, updated_payload)\n>       AssertionStatusCode.assert_status_code_400(response)\n\ntests/catalog/options/test_HU25_ES_PUT_ProductOption.py:176: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_400(response):\n>       assert response.status_code == 400\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:23: AssertionError","steps":[],"attachments":[{"uid":"8f9e1924d82f1452","name":"log","source":"8f9e1924d82f1452.txt","type":"text/plain","size":2515}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup_options_cleanup::0","time":{"start":1755294164228,"stop":1755294164228,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"boundary"},{"name":"tag","value":"negative"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.catalog.options"},{"name":"suite","value":"test_HU25_ES_PUT_ProductOption"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2377-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.options.test_HU25_ES_PUT_ProductOption"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":4,"passed":0,"unknown":0,"total":4},"items":[{"uid":"4bff1b3125bad28b","reportUrl":"https://Elv500.github.io/Softsign/30//#testresult/4bff1b3125bad28b","status":"skipped","statusDetails":"XFAIL Known issue BUG: Normalización inconsistente al actualizar 'position' con valores >999,999,999 - Sin validación y comportamiento impredecible\n\nAssertionError","time":{"start":1755291854599,"stop":1755291854959,"duration":360}},{"uid":"3793c22ff6c962dd","reportUrl":"https://Elv500.github.io/Softsign/29//#testresult/3793c22ff6c962dd","status":"skipped","statusDetails":"XFAIL Known issue BUG: Normalización inconsistente al actualizar 'position' con valores >999,999,999 - Sin validación y comportamiento impredecible\n\nAssertionError","time":{"start":1755291512268,"stop":1755291512674,"duration":406}},{"uid":"6450e76294a65e36","reportUrl":"https://Elv500.github.io/Softsign/28//#testresult/6450e76294a65e36","status":"skipped","statusDetails":"XFAIL Known issue BUG: Normalización inconsistente al actualizar 'position' con valores >999,999,999 - Sin validación y comportamiento impredecible\n\nrequests.exceptions.JSONDecodeError: Expecting value: line 3 column 1 (char 2)","time":{"start":1755291271218,"stop":1755291271218,"duration":0}}]},"tags":["boundary","negative","functional"]},"source":"99d89332566eefee.json","parameterValues":[]}