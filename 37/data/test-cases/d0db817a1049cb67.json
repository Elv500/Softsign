{"uid":"d0db817a1049cb67","name":"test_TC336_actualizacion_un_campo_priority_verificar_borrado_campos","fullName":"tests.catalog.inventory.test_HU15_EA_PUT_Inventory#test_TC336_actualizacion_un_campo_priority_verificar_borrado_campos","historyId":"96d16d2c1caa9c115257693487655551","time":{"start":1755376106279,"stop":1755376106718,"duration":439},"status":"skipped","statusMessage":"XFAIL BUG336: Permite actualizar con campos faltantes como si fuera patch\n\nAssertionError: assert '/api/v2/admin/inventory-source-addresses/4164' == {}","statusTrace":"setup_edit_inventory = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUzNzYwNzMsImV4cCI6MTc1NTM3OTY3Mywicm9sZX...urces/large-eight-north', '@type': 'InventorySource', 'address': '/api/v2/admin/inventory-source-addresses/4164', ...})\n\n    @pytest.mark.functional\n    @pytest.mark.medium\n    @pytest.mark.xfail(reason=\"BUG336: Permite actualizar con campos faltantes como si fuera patch\", run=True)\n    def test_TC336_actualizacion_un_campo_priority_verificar_borrado_campos(setup_edit_inventory):\n        headers, inventory = setup_edit_inventory\n        url = EndpointInventory.code(inventory[\"code\"])\n        responseBefore = SyliusRequest.get(url, headers)\n        AssertionInventory.assert_inventory_code_schema(responseBefore.json())\n        log_request_response(url, responseBefore)\n        payload = create_inventory_data(priority=2)\n        response = SyliusRequest.put(url, headers, payload)\n        AssertionInventory.assert_inventory_edit_input_schema(payload)\n        AssertionStatusCode.assert_status_code_200(response)\n        AssertionInventory.assert_inventory_code_schema(response.json())\n        log_request_response(url, response, headers, payload)\n>       assert inventory[\"address\"] == {}\nE       AssertionError: assert '/api/v2/admin/inventory-source-addresses/4164' == {}\n\ntests/catalog/inventory/test_HU15_EA_PUT_Inventory.py:183: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755376072485,"stop":1755376072486,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755376072486,"stop":1755376073195,"duration":709},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_edit_inventory","time":{"start":1755376106049,"stop":1755376106278,"duration":229},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL BUG336: Permite actualizar con campos faltantes como si fuera patch\n\nAssertionError: assert '/api/v2/admin/inventory-source-addresses/4164' == {}","statusTrace":"setup_edit_inventory = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUzNzYwNzMsImV4cCI6MTc1NTM3OTY3Mywicm9sZX...urces/large-eight-north', '@type': 'InventorySource', 'address': '/api/v2/admin/inventory-source-addresses/4164', ...})\n\n    @pytest.mark.functional\n    @pytest.mark.medium\n    @pytest.mark.xfail(reason=\"BUG336: Permite actualizar con campos faltantes como si fuera patch\", run=True)\n    def test_TC336_actualizacion_un_campo_priority_verificar_borrado_campos(setup_edit_inventory):\n        headers, inventory = setup_edit_inventory\n        url = EndpointInventory.code(inventory[\"code\"])\n        responseBefore = SyliusRequest.get(url, headers)\n        AssertionInventory.assert_inventory_code_schema(responseBefore.json())\n        log_request_response(url, responseBefore)\n        payload = create_inventory_data(priority=2)\n        response = SyliusRequest.put(url, headers, payload)\n        AssertionInventory.assert_inventory_edit_input_schema(payload)\n        AssertionStatusCode.assert_status_code_200(response)\n        AssertionInventory.assert_inventory_code_schema(response.json())\n        log_request_response(url, response, headers, payload)\n>       assert inventory[\"address\"] == {}\nE       AssertionError: assert '/api/v2/admin/inventory-source-addresses/4164' == {}\n\ntests/catalog/inventory/test_HU15_EA_PUT_Inventory.py:183: AssertionError","steps":[],"attachments":[{"uid":"84c8fba0243cb2d","name":"log","source":"84c8fba0243cb2d.txt","type":"text/plain","size":3413}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup_edit_inventory::0","time":{"start":1755376106722,"stop":1755376106937,"duration":215},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"medium"},{"name":"tag","value":"functional"},{"name":"parentSuite","value":"tests.catalog.inventory"},{"name":"suite","value":"test_HU15_EA_PUT_Inventory"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2404-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.catalog.inventory.test_HU15_EA_PUT_Inventory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":2,"passed":0,"unknown":0,"total":2},"items":[{"uid":"ecd2c8b4d24318d9","reportUrl":"https://Elv500.github.io/Softsign/35//#testresult/ecd2c8b4d24318d9","status":"skipped","statusDetails":"XFAIL BUG336: Permite actualizar con campos faltantes como si fuera patch\n\nAssertionError: assert '/api/v2/admin/inventory-source-addresses/4128' == {}","time":{"start":1755374694576,"stop":1755374695342,"duration":766}}]},"tags":["functional","medium"]},"source":"d0db817a1049cb67.json","parameterValues":[]}