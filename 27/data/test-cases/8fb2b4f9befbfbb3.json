{"uid":"8fb2b4f9befbfbb3","name":"test_TC336_Actualizar_sin_campos_obligatorios_tax_category","fullName":"tests.configuration.tax_categories.test_HU29_KG_PUT_TaxCategory#test_TC336_Actualizar_sin_campos_obligatorios_tax_category","historyId":"b1f8b92464ccb5364eaae4943fec2f31","time":{"start":1755149159258,"stop":1755149159704,"duration":446},"status":"skipped","statusMessage":"XFAIL known issue La app permite espacios vacios BUG\n\nAssertionError","statusTrace":"setup_edit_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUxNDkwNjEsImV4cCI6MTc1NTE1MjY2MSwicm9sZX...xts/TaxCategory', '@id': '/api/v2/admin/tax-categories/TAX-a39a31', '@type': 'TaxCategory', 'code': 'TAX-a39a31', ...})\n\n    @pytest.mark.regression\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known issue La app permite espacios vacios BUG\", run=True)\n    def test_TC336_Actualizar_sin_campos_obligatorios_tax_category(setup_edit_tax_category):\n        headers, tax_category_data = setup_edit_tax_category\n        url = EndpointTaxCategory.code(tax_category_data[\"code\"])\n        initial_response = SyliusRequest.get(url, headers)\n        initial_data = initial_response.json()\n        log_request_response(url, initial_response, headers)\n        payload = {}\n        response = SyliusRequest.put(url, headers, payload)\n        log_request_response(url, response, headers, payload)\n>       AssertionStatusCode.assert_status_code_422(response)\n\ntests/configuration/tax_categories/test_HU29_KG_PUT_TaxCategory.py:115: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_422(response):\n>       assert response.status_code == 422\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:59: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755149060446,"stop":1755149060447,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755149060447,"stop":1755149061188,"duration":741},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_edit_tax_category","time":{"start":1755149159003,"stop":1755149159258,"duration":255},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL known issue La app permite espacios vacios BUG\n\nAssertionError","statusTrace":"setup_edit_tax_category = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTUxNDkwNjEsImV4cCI6MTc1NTE1MjY2MSwicm9sZX...xts/TaxCategory', '@id': '/api/v2/admin/tax-categories/TAX-a39a31', '@type': 'TaxCategory', 'code': 'TAX-a39a31', ...})\n\n    @pytest.mark.regression\n    @pytest.mark.negative\n    @pytest.mark.xfail(reason=\"known issue La app permite espacios vacios BUG\", run=True)\n    def test_TC336_Actualizar_sin_campos_obligatorios_tax_category(setup_edit_tax_category):\n        headers, tax_category_data = setup_edit_tax_category\n        url = EndpointTaxCategory.code(tax_category_data[\"code\"])\n        initial_response = SyliusRequest.get(url, headers)\n        initial_data = initial_response.json()\n        log_request_response(url, initial_response, headers)\n        payload = {}\n        response = SyliusRequest.put(url, headers, payload)\n        log_request_response(url, response, headers, payload)\n>       AssertionStatusCode.assert_status_code_422(response)\n\ntests/configuration/tax_categories/test_HU29_KG_PUT_TaxCategory.py:115: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_422(response):\n>       assert response.status_code == 422\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:59: AssertionError","steps":[],"attachments":[{"uid":"19ef1ace2cc6b9d8","name":"log","source":"19ef1ace2cc6b9d8.txt","type":"text/plain","size":3919}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":1,"hasContent":true},"afterStages":[{"name":"setup_edit_tax_category::0","time":{"start":1755149159711,"stop":1755149159936,"duration":225},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"negative"},{"name":"tag","value":"regression"},{"name":"parentSuite","value":"tests.configuration.tax_categories"},{"name":"suite","value":"test_HU29_KG_PUT_TaxCategory"},{"name":"host","value":"pkrvmsl9tci6h6u"},{"name":"thread","value":"2455-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.configuration.tax_categories.test_HU29_KG_PUT_TaxCategory"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"tags":["negative","regression"]},"source":"8fb2b4f9befbfbb3.json","parameterValues":[]}