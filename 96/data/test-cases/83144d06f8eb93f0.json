{"uid":"83144d06f8eb93f0","name":"test_TC274_actualizar_grupo_sin_campo_name","fullName":"tests.customer.groups.test_HU03_PD_PUT_CustomerGroup#test_TC274_actualizar_grupo_sin_campo_name","historyId":"67a9cc8997aa3147c77d23a0dfffb88b","time":{"start":1755555158882,"stop":1755555159884,"duration":1002},"status":"skipped","statusMessage":"XFAIL Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\n\nAssertionError","statusTrace":"setup_customer_group_cleanup = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU1NTQ5MDIsImV4cCI6MTc1NTU1ODUwMiwicm9sZX...8u6xjQEOXUAViA1bIAsja5kDqU'}, <function setup_customer_group_cleanup.<locals>.add_group_for_cleanup at 0x7f8407249ee0>)\n\n    @pytest.mark.negative\n    @pytest.mark.boundary\n    @pytest.mark.xfail(reason=\"Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\", run=True)\n    @pytest.mark.high\n    def test_TC274_actualizar_grupo_sin_campo_name(setup_customer_group_cleanup):\n        auth_headers, add_group_for_cleanup = setup_customer_group_cleanup\n    \n        initial_data = generate_customer_group_source_data()\n        create_endpoint = EndpointCustomerGroup.customer_group()\n        create_response = SyliusRequest.post(create_endpoint, auth_headers, initial_data)\n        AssertionStatusCode.assert_status_code_201(create_response)\n    \n        customer_group_code = create_response.json()[\"code\"]\n        add_group_for_cleanup(customer_group_code)\n    \n        data = {}\n        endpoint = EndpointCustomerGroup.code(customer_group_code)\n        response = SyliusRequest.put(endpoint, auth_headers, data)\n    \n        log_request_response(endpoint, response, headers=auth_headers, payload=data)\n>       AssertionStatusCode.assert_status_code_422(response)\n\ntests/customer/groups/test_HU03_PD_PUT_CustomerGroup.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_422(response):\n>       assert response.status_code == 422\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:59: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1755554902406,"stop":1755554902407,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"auth_headers","time":{"start":1755554902407,"stop":1755554903103,"duration":696},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false},{"name":"setup_customer_group_cleanup","time":{"start":1755555158882,"stop":1755555158882,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"testStage":{"status":"skipped","statusMessage":"XFAIL Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\n\nAssertionError","statusTrace":"setup_customer_group_cleanup = ({'Authorization': 'Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJpYXQiOjE3NTU1NTQ5MDIsImV4cCI6MTc1NTU1ODUwMiwicm9sZX...8u6xjQEOXUAViA1bIAsja5kDqU'}, <function setup_customer_group_cleanup.<locals>.add_group_for_cleanup at 0x7f8407249ee0>)\n\n    @pytest.mark.negative\n    @pytest.mark.boundary\n    @pytest.mark.xfail(reason=\"Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\", run=True)\n    @pytest.mark.high\n    def test_TC274_actualizar_grupo_sin_campo_name(setup_customer_group_cleanup):\n        auth_headers, add_group_for_cleanup = setup_customer_group_cleanup\n    \n        initial_data = generate_customer_group_source_data()\n        create_endpoint = EndpointCustomerGroup.customer_group()\n        create_response = SyliusRequest.post(create_endpoint, auth_headers, initial_data)\n        AssertionStatusCode.assert_status_code_201(create_response)\n    \n        customer_group_code = create_response.json()[\"code\"]\n        add_group_for_cleanup(customer_group_code)\n    \n        data = {}\n        endpoint = EndpointCustomerGroup.code(customer_group_code)\n        response = SyliusRequest.put(endpoint, auth_headers, data)\n    \n        log_request_response(endpoint, response, headers=auth_headers, payload=data)\n>       AssertionStatusCode.assert_status_code_422(response)\n\ntests/customer/groups/test_HU03_PD_PUT_CustomerGroup.py:116: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nresponse = <Response [200]>\n\n    @staticmethod\n    def assert_status_code_422(response):\n>       assert response.status_code == 422\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\nE       AssertionError\n\nsrc/assertions/status_code_assertions.py:59: AssertionError","steps":[],"attachments":[{"uid":"40b214647759e228","name":"log","source":"40b214647759e228.txt","type":"text/plain","size":2115},{"uid":"badd598d0abe2ebc","name":"stdout","source":"badd598d0abe2ebc.txt","type":"text/plain","size":47}],"parameters":[],"shouldDisplayMessage":true,"stepsCount":0,"attachmentsCount":2,"hasContent":true},"afterStages":[{"name":"setup_customer_group_cleanup::0","time":{"start":1755555159894,"stop":1755555160354,"duration":460},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"stepsCount":0,"attachmentsCount":0,"hasContent":false}],"labels":[{"name":"tag","value":"high"},{"name":"tag","value":"boundary"},{"name":"tag","value":"negative"},{"name":"parentSuite","value":"tests.customer.groups"},{"name":"suite","value":"test_HU03_PD_PUT_CustomerGroup"},{"name":"host","value":"pkrvmubgrv54qmi"},{"name":"thread","value":"2380-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.customer.groups.test_HU03_PD_PUT_CustomerGroup"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[],"history":{"statistic":{"failed":0,"broken":0,"skipped":11,"passed":0,"unknown":0,"total":11},"items":[{"uid":"8478ff15e7baa599","reportUrl":"https://Elv500.github.io/Softsign/95//#testresult/8478ff15e7baa599","status":"skipped","statusDetails":"XFAIL Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\n\nAssertionError","time":{"start":1755553569034,"stop":1755553569789,"duration":755}},{"uid":"e1c376ea9c677fe3","reportUrl":"https://Elv500.github.io/Softsign/94//#testresult/e1c376ea9c677fe3","status":"skipped","statusDetails":"XFAIL Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\n\nAssertionError","time":{"start":1755553225650,"stop":1755553226131,"duration":481}},{"uid":"961ed3bd28635440","reportUrl":"https://Elv500.github.io/Softsign/93//#testresult/961ed3bd28635440","status":"skipped","statusDetails":"XFAIL Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\n\nAssertionError","time":{"start":1755552819440,"stop":1755552819764,"duration":324}},{"uid":"e5637f4a676b0609","reportUrl":"https://Elv500.github.io/Softsign/92//#testresult/e5637f4a676b0609","status":"skipped","statusDetails":"XFAIL Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\n\nAssertionError","time":{"start":1755552574691,"stop":1755552575502,"duration":811}},{"uid":"57261201aa617ce1","reportUrl":"https://Elv500.github.io/Softsign/65//#testresult/57261201aa617ce1","status":"skipped","statusDetails":"XFAIL Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\n\nAssertionError","time":{"start":1755545878236,"stop":1755545879894,"duration":1658}},{"uid":"aa51eb3c1a0eb030","reportUrl":"https://Elv500.github.io/Softsign/64//#testresult/aa51eb3c1a0eb030","status":"skipped","statusDetails":"XFAIL Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\n\nAssertionError","time":{"start":1755545784182,"stop":1755545785185,"duration":1003}},{"uid":"ac18efac9e216fa9","reportUrl":"https://Elv500.github.io/Softsign/63//#testresult/ac18efac9e216fa9","status":"skipped","statusDetails":"XFAIL Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\n\nAssertionError","time":{"start":1755545706984,"stop":1755545707890,"duration":906}},{"uid":"b56012780c9bbc8a","reportUrl":"https://Elv500.github.io/Softsign/61//#testresult/b56012780c9bbc8a","status":"skipped","statusDetails":"XFAIL Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\n\nAssertionError","time":{"start":1755545420826,"stop":1755545421852,"duration":1026}},{"uid":"f4553082b74b1ced","reportUrl":"https://Elv500.github.io/Softsign/59//#testresult/f4553082b74b1ced","status":"skipped","statusDetails":"XFAIL Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\n\nAssertionError","time":{"start":1755545184736,"stop":1755545185263,"duration":527}},{"uid":"45f587d812d4ae7","reportUrl":"https://Elv500.github.io/Softsign/57//#testresult/45f587d812d4ae7","status":"skipped","statusDetails":"XFAIL Known issue BugId: CG-03 Permite actualizar el campo name vacio cuando es obligatorio\n\nAssertionError","time":{"start":1755544412731,"stop":1755544413981,"duration":1250}}]},"tags":["boundary","high","negative"]},"source":"83144d06f8eb93f0.json","parameterValues":[]}